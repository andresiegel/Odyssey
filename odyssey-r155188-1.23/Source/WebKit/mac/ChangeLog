2013-09-10  Andreas Kling  <akling@apple.com>

        ScrollView::children() should return a reference.
        <https://webkit.org/b/120795>

        Reviewed by Anders Carlsson.

        * WebView/WebView.mm:
        (-[WebView _addScrollerDashboardRegionsForFrameView:dashboardRegions:]):

2013-09-04  Mark Rowe  <mrowe@apple.com>

        <https://webkit.org/b/120707> Make WebKit's localizable strings mechanism usable under ARC

        WebKit's localizable strings mechanism is also used outside of WebKit so it needs to work
        both with and without ARC.

        Reviewed by Anders Carlsson.

        * Misc/WebLocalizableStrings.h: Mark the bundle member as unretained. This matches how the
        member is used within WebLocalizableStrings.mm.

2013-09-02  Darin Adler  <darin@apple.com>

        [Mac] No need for HardAutorelease, which is same as CFBridgingRelease
        https://bugs.webkit.org/show_bug.cgi?id=120569

        Reviewed by Andy Estes.

        * Misc/WebNSFileManagerExtras.mm:
        (-[NSFileManager _webkit_startupVolumeName]): Removed some unneeded locals.
        Got rid of the pointless ref/leakRef/HardAutorelease dance, and replaced it
        with a [[x copy] autorelease].

        * Misc/WebNSURLExtras.mm:
        (-[NSURL _web_URLWithLowercasedScheme]): Use CFBridgingRelease, and got rid
        of unneeded type casts.

        * Plugins/WebBasePluginPackage.mm:
        (+[WebBasePluginPackage preferredLocalizationName]): Use CFBridgingRelease.
        * WebView/WebPDFRepresentation.mm:
        (-[WebPDFRepresentation convertPostScriptDataSourceToPDF:]): Ditto.

        * WebView/WebView.mm:
        (+[WebView _setCacheModel:]): Use CFBridgingRelease and got rid of unneeded
        type cast.

2013-08-30  Antti Koivisto  <antti@apple.com>

        Remove code behind ENABLE(DIALOG_ELEMENT)
        https://bugs.webkit.org/show_bug.cgi?id=120467

        Reviewed by Darin Adler.

        * Configurations/FeatureDefines.xcconfig:

2013-08-29  Sam Weinig  <sam@webkit.org>

        Add ENABLE gaurds for Promises
        https://bugs.webkit.org/show_bug.cgi?id=120488

        Reviewed by Andreas Kling.

        * Configurations/FeatureDefines.xcconfig:

2013-08-29  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Download Web Archive of Inspected Page
        https://bugs.webkit.org/show_bug.cgi?id=119774

        Reviewed by Timothy Hatcher.

        Update to support InspectorFrontendHost.save's new base64Encoded
        parameter. It means the incoming content is binary data, not a string.

        * WebCoreSupport/WebInspectorClient.h:
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorFrontendClient::save):

2013-08-28  Chris Curtis  <chris_curtis@apple.com>

        https://bugs.webkit.org/show_bug.cgi?id=119548
        Refactoring Exception throws.

        Reviewed by Geoffrey Garen.
        
        Moved setting an exception into the vm, These functions changed to use the new functionality.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::moveGlobalExceptionToExecState):
        * Plugins/Hosted/ProxyInstance.mm:
        (WebKit::ProxyInstance::invokeMethod):

2013-08-27  Anders Carlsson  <andersca@apple.com>

        Fix build.

        * Plugins/Hosted/ProxyInstance.h:
        * Plugins/Hosted/ProxyInstance.mm:
        (WebKit::ProxyInstance::methodNamed):
        (WebKit::ProxyInstance::fieldNamed):

2013-08-23  Andy Estes  <aestes@apple.com>

        Fix issues found by the Clang Static Analyzer
        https://bugs.webkit.org/show_bug.cgi?id=120230

        Reviewed by Darin Adler.

        * Misc/WebNSFileManagerExtras.mm:
        (-[NSFileManager _webkit_startupVolumeName]): Used HardAutorelease()
        instead of WebCFAutorelease().
        * Misc/WebNSObjectExtras.h: Removed definition of WebCFAutorelease().
        * Misc/WebNSURLExtras.mm:
        (-[NSURL _web_URLWithLowercasedScheme]): Used HardAutorelease()
        instead of WebCFAutorelease().
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView createPluginLayer]): Stop leaking
        CGColors (CALayer retains its backgroundColor property despite the
        property attributes claiming otherwise).
        * Plugins/WebBasePluginPackage.mm:
        (+[WebBasePluginPackage preferredLocalizationName]): Used
        HardAutorelease() instead of WebCFAutorelease().
        * WebView/WebDeviceOrientationProviderMock.mm:
        (-[WebDeviceOrientationProviderMockInternal lastOrientation]): Stop
        leaking WebDeviceOrientations.
        * WebView/WebPDFRepresentation.mm:
        (-[WebPDFRepresentation convertPostScriptDataSourceToPDF:]): Used
        HardAutorelease() instead of WebCFAutorelease().
        * WebView/WebView.mm:
        (+[WebView _setCacheModel:]): Ditto.
        (-[WebView _removeObjectForIdentifier:]): Ditto.

2013-08-26  Alexey Proskuryakov  <ap@apple.com>

        [Mac] can-read-in-dragstart-event.html and can-read-in-copy-and-cut-events.html fail
        https://bugs.webkit.org/show_bug.cgi?id=113094

        Reviewed by Darin Adler.

        Return new pasteboard change count from all functions that change it.

        * WebCoreSupport/WebPlatformStrategies.h:
        * WebCoreSupport/WebPlatformStrategies.mm:
        (WebPlatformStrategies::copy):
        (WebPlatformStrategies::changeCount):
        (WebPlatformStrategies::addTypes):
        (WebPlatformStrategies::setTypes):
        (WebPlatformStrategies::setBufferForType):
        (WebPlatformStrategies::setPathnamesForType):
        (WebPlatformStrategies::setStringForType):

2013-08-26  Andreas Kling  <akling@apple.com>

        Unreviewed build fix.

        * WebView/WebFrame.mm:
        (+[WebFrame _createMainFrameWithPage:frameName:frameView:]):

2013-08-26  Andreas Kling  <akling@apple.com>

        WebCore: Let Page create the main Frame.
        <https://webkit.org/b/119964>

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebFrameLoaderClient.h:
        (WebFrameLoaderClient::setWebFrame):

            Make it possible to construct a WebFrameLoaderClient with a null WebFrame*.
            A WebFrame* is later hooked up with a call to setWebFrame().

        * WebView/WebFrame.mm:
        (+[WebFrame _createMainFrameWithPage:frameName:frameView:]):

            Customized this method to wrap the Page::mainFrame() instead of creating a
            new Frame.

        * WebView/WebView.mm:
        (-[WebView _commonInitializationWithFrameName:groupName:]):

            Add a WebFrameLoaderClient to the PageClients passed to Page().

2013-08-25  Darin Adler  <darin@apple.com>

        Frame should not have a documentTypeString member function
        https://bugs.webkit.org/show_bug.cgi?id=120262

        Reviewed by Andreas Kling.

        * WebView/WebFrame.mm: Removed _stringWithDocumentTypeStringAndMarkupString:
        internal method, which was not used anywhere in WebKit. Internal methods are
        only for use within WebKit, as opposed to public and private methods that can
        be used outside.
        * WebView/WebFrameInternal.h: Ditto.

2013-08-24  Darin Adler  <darin@apple.com>

        Frame::tree should return a reference instead of a pointer
        https://bugs.webkit.org/show_bug.cgi?id=120259

        Reviewed by Andreas Kling.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::performRequest):
        * Plugins/WebBaseNetscapePluginView.mm:
        (-[WebBaseNetscapePluginView resolvedURLStringForURL:target:]):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView loadPluginRequest:]):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (applyAppleDictionaryApplicationQuirkNonInlinePart):
        (WebFrameLoaderClient::prepareForDataSourceReplacement):
        (WebFrameLoaderClient::createFrame):
        * WebView/WebFrame.mm:
        (+[WebFrame _createFrameWithPage:frameName:frameView:ownerElement:]):
        (-[WebFrame _updateBackgroundAndUpdatesWhileOffscreen]):
        (-[WebFrame _unmarkAllBadGrammar]):
        (-[WebFrame _unmarkAllMisspellings]):
        (-[WebFrame _atMostOneFrameHasSelection]):
        (-[WebFrame _findFrameWithSelection]):
        (-[WebFrame _drawRect:contentsOnly:]):
        (-[WebFrame _isDescendantOfFrame:]):
        (-[WebFrame _recursive_resumeNullEventsForAllNetscapePlugins]):
        (-[WebFrame _recursive_pauseNullEventsForAllNetscapePlugins]):
        (-[WebFrame name]):
        (-[WebFrame findFrameNamed:]):
        (-[WebFrame parentFrame]):
        (-[WebFrame childFrames]):
        * WebView/WebView.mm:
        (-[WebView _attachScriptDebuggerToAllFrames]):
        (-[WebView _detachScriptDebuggerFromAllFrames]):
        (-[WebView _clearMainFrameName]):
        (-[WebView _isUsingAcceleratedCompositing]):
        (-[WebView _isSoftwareRenderable]):
        (-[WebView setHostWindow:]):
        (incrementFrame):
        Use tree(). instead of tree()->.

2013-08-23  Beth Dakin  <bdakin@apple.com>

        REGRESSION (r132545): Some PDFs generated by WebKit are blank when viewed in 
        Adobe Reader
        https://bugs.webkit.org/show_bug.cgi?id=120240
        -and corresponding-
        <rdar://problem/14634453>

        Reviewed by Anders Carlsson.

        Hook up new WebSystemInterface API to find out if the current context is the PDF 
        context.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-08-20  Pratik Solanki  <psolanki@apple.com>

        <https://webkit.org/b/120029> Document::markers() should return a reference

        Reviewed by Andreas Kling.

        Document::m_markers is never NULL so return a reference from Document::markers(). Also mark
        m_markers as const and initialize it in member initialization.

        * WebView/WebFrame.mm:
        (-[WebFrame _unmarkAllBadGrammar]):
        (-[WebFrame _unmarkAllMisspellings]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView unmarkAllTextMatches]):
        (-[WebHTMLView rectsForTextMatches]):

2013-08-19  Ryosuke Niwa  <rniwa@webkit.org>

        <https://webkit.org/b/120049> Delete code for Snow Leopard

        Reviewed by Benjamin Poulain.

        * DefaultDelegates/WebDefaultContextMenuDelegate.mm:
        (-[WebDefaultUIDelegate menuItemWithTag:target:representedObject:]):
        (-[WebDefaultUIDelegate webView:contextMenuItemsForElement:defaultMenuItems:]):
        * Misc/WebNSControlExtras.m:
        (-[NSControl sizeToFitAndAdjustWindowHeight]):
        * Misc/WebNSFileManagerExtras.mm:
        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::shouldEraseMarkersAfterChangeSelection):
        (WebEditorClient::getGuessesForWord):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::dispatchDidLayout):
        (WebFrameLoaderClient::provisionalLoadStarted):
        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):
        * WebKitPrefix.h:
        * WebView/WebDynamicScrollBarsView.mm:
        (-[WebDynamicScrollBarsView scrollWheel:]):
        * WebView/WebFullScreenController.mm:
        (convertRectToScreen):
        (-[WebFullScreenController finishedEnterFullScreenAnimation:]):
        (-[WebFullScreenController exitFullScreen]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _pasteWithPasteboard:allowPlainText:]):
        (-[WebHTMLView removeMouseMovedObserver]):
        (-[WebHTMLView windowDidBecomeKey:]):
        (-[WebHTMLView windowDidResignKey:]):
        * WebView/WebView.mm:
        (-[WebView _deviceScaleFactor]):

2013-08-19  Ryosuke Niwa  <rniwa@webkit.org>

        <https://webkit.org/b/120051> Remove the Mail thread workaround

        Reviewed by Sam Weinig.

        Remove the workaround for a very old version of Mail added in r39455.

        * WebView/WebArchive.mm:
        (-[WebArchive initWithMainResource:subresources:subframeArchives:]):
        (-[WebArchive mainResource]):
        (-[WebArchive subresources]):
        (-[WebArchive subframeArchives]):
        * WebView/WebFrameView.mm:
        (-[WebFrameView initWithFrame:]):
        * WebView/WebResource.mm:
        (-[WebResource data]):
        (-[WebResource URL]):
        (-[WebResource MIMEType]):
        (-[WebResource textEncodingName]):
        (-[WebResource frameName]):
        (-[WebResource _ignoreWhenUnarchiving]):
        (-[WebResource _initWithData:URL:MIMEType:textEncodingName:frameName:response:copyData:]):
        (-[WebResource _suggestedFilename]):
        (-[WebResource _response]):
        (-[WebResource _stringValue]):

2013-08-19  Pratik Solanki  <psolanki@apple.com>

        <https://webkit.org/b/119918> Frame::selection() should return a reference

        Reviewed by Darin Adler.

        m_selection is never NULL so return a reference from Frame::selection(). Also removed some
        unnecessary null checks and assert diff ts exposed as a result.

        * Plugins/WebPluginController.mm:
        * WebView/WebFrame.mm:
        (-[WebFrame _hasSelection]):
        (-[WebFrame _rangeByAlteringCurrentSelection:FrameSelection::direction:granularity:]):
        (-[WebFrame _selectionGranularity]):
        (-[WebFrame _convertToNSRange:]):
        (-[WebFrame _convertToDOMRange:]):
        (-[WebFrame _insertParagraphSeparatorInQuotedContent]):
        (-[WebFrame _typingStyle]):
        (-[WebFrame _selectedNSRange]):
        (-[WebFrame _selectNSRange:]):
        (-[WebFrame _replaceSelectionWithFragment:selectReplacement:smartReplace:matchStyle:]):
        (-[WebFrame _replaceSelectionWithText:selectReplacement:smartReplace:]):
        * WebView/WebHTMLRepresentation.mm:
        (-[WebHTMLRepresentation currentForm]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView readSelectionFromPasteboard:]):
        (-[WebHTMLView _selectedRange]):
        (-[WebHTMLView _hasSelection]):
        (-[WebHTMLView _hasSelectionOrInsertionPoint]):
        (-[WebHTMLView _hasInsertionPoint]):
        (-[WebHTMLView _isEditable]):
        (-[WebHTMLView jumpToSelection:]):
        (-[WebHTMLView validateUserInterfaceItemWithoutDelegate:]):
        (-[WebHTMLView maintainsInactiveSelection]):
        (isTextInput):
        (isInPasswordField):
        (-[WebHTMLView centerSelectionInVisibleArea:]):
        (-[WebHTMLView _canSmartCopyOrDelete]):
        (-[WebHTMLView _lookUpInDictionaryFromMenu:]):
        (-[WebHTMLView _updateSelectionForInputManager]):
        (-[WebHTMLView selectionRect]):
        (-[WebHTMLView selectionTextRects]):
        (-[WebHTMLView selectionImageRect]):
        (-[WebHTMLView selectAll]):
        (-[WebHTMLView deselectAll]):
        (-[WebHTMLView selectedAttributedString]):
        * WebView/WebTextCompletionController.mm:
        (-[WebTextCompletionController doCompletion]):
        * WebView/WebView.mm:
        (-[WebView setSelectedDOMRange:affinity:]):
        (-[WebView selectedDOMRange]):
        (-[WebView selectionAffinity]):
        (-[WebView setEditable:]):
        (-[WebView _selectionIsCaret]):
        (-[WebView _selectionIsAll]):

2013-08-17  Darin Adler  <darin@apple.com>

        <https://webkit.org/b/119941> Make Page::dragController return a reference

        Reviewed by Andreas Kling.

        * WebView/WebFrameView.mm:
        (-[WebFrameView _setDocumentView:]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView draggingSourceOperationMaskForLocal:]):
        (-[WebHTMLView namesOfPromisedFilesDroppedAtDestination:]):
        * WebView/WebView.mm:
        (-[WebView _setInitiatedDrag:]):
        (-[WebView draggingEntered:]):
        (-[WebView draggingUpdated:]):
        (-[WebView draggingExited:]):
        (-[WebView performDragOperation:]):
        (-[WebView moveDragCaretToPoint:]):
        (-[WebView removeDragCaret]):
        Updated call sites.

2013-08-16  Pratik Solanki  <psolanki@apple.com>

        <https://webkit.org/b/119852> Frame::scriptController() should return a reference

        Reviewed by Andreas Kling.

        m_script is never NULL so we can just return a reference. Also remove some pointless null
        checks as a result of doing this.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::cleanup):
        (WebKit::NetscapePluginInstanceProxy::getWindowNPObject):
        (WebKit::NetscapePluginInstanceProxy::getPluginElementNPObject):
        (WebKit::NetscapePluginInstanceProxy::evaluate):
        (WebKit::NetscapePluginInstanceProxy::invoke):
        (WebKit::NetscapePluginInstanceProxy::invokeDefault):
        (WebKit::NetscapePluginInstanceProxy::construct):
        (WebKit::NetscapePluginInstanceProxy::getProperty):
        (WebKit::NetscapePluginInstanceProxy::setProperty):
        (WebKit::NetscapePluginInstanceProxy::removeProperty):
        (WebKit::NetscapePluginInstanceProxy::hasProperty):
        (WebKit::NetscapePluginInstanceProxy::hasMethod):
        (WebKit::NetscapePluginInstanceProxy::enumerate):
        (WebKit::NetscapePluginInstanceProxy::demarshalValueFromArray):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView getVariable:value:]):
        (-[WebNetscapePluginView _destroyPlugin]):
        * Plugins/WebPluginController.mm:
        * WebCoreSupport/WebFrameLoaderClient.mm:
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorFrontendClient::save):
        (WebInspectorFrontendClient::append):
        * WebView/WebFrame.mm:
        (-[WebFrame _attachScriptDebugger]):
        (-[WebFrame _stringByEvaluatingJavaScriptFromString:forceUserGesture:]):
        (-[WebFrame _stringByEvaluatingJavaScriptFromString:withGlobalObject:inScriptWorld:]):
        (-[WebFrame _globalContextForScriptWorld:]):
        (-[WebFrame jsWrapperForNode:inScriptWorld:]):
        (-[WebFrame windowObject]):
        (-[WebFrame globalContext]):
        (-[WebFrame javaScriptContext]):
        * WebView/WebScriptDebugger.mm:
        (WebScriptDebugger::initGlobalCallFrame):
        (WebScriptDebugger::callEvent):
        * WebView/WebView.mm:
        (-[WebView windowScriptObject]):
        (-[WebView aeDescByEvaluatingJavaScriptFromString:]):

2013-08-15  Anders Carlsson  <andersca@apple.com>

        <https://webkit.org/b/119859> Frame::loader() should return a reference

        Reviewed by Andreas Kling.

        * Plugins/Hosted/HostedNetscapePluginStream.mm:
        (WebKit::HostedNetscapePluginStream::HostedNetscapePluginStream):
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::performRequest):
        (WebKit::NetscapePluginInstanceProxy::loadRequest):
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView pluginView:receivedResponse:]):
        * Plugins/WebBaseNetscapePluginView.mm:
        (-[WebBaseNetscapePluginView requestWithURLCString:]):
        * Plugins/WebNetscapePluginStream.mm:
        (WebNetscapePluginStream::WebNetscapePluginStream):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView loadStream]):
        (-[WebNetscapePluginView pluginView:receivedResponse:]):
        (-[WebNetscapePluginView loadPluginRequest:]):
        (-[WebNetscapePluginView loadRequest:inTarget:withNotifyData:sendNotification:]):
        * Plugins/WebPluginController.mm:
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::dispatchDidReceiveServerRedirectForProvisionalLoad):
        (WebFrameLoaderClient::dispatchDidStartProvisionalLoad):
        (WebFrameLoaderClient::dispatchWillSubmitForm):
        (WebFrameLoaderClient::updateGlobalHistory):
        (WebFrameLoaderClient::updateGlobalHistoryRedirectLinks):
        (WebFrameLoaderClient::restoreViewState):
        (WebFrameLoaderClient::transitionToCommittedForNewPage):
        (WebFrameLoaderClient::createFrame):
        * WebCoreSupport/WebFrameNetworkingContext.mm:
        (WebFrameNetworkingContext::blockedError):
        * WebCoreSupport/WebPlatformStrategies.mm:
        (WebPlatformStrategies::getPluginInfo):
        * WebView/WebFrame.mm:
        (kit):
        (-[WebFrame _dataSource]):
        (-[WebFrame _canProvideDocumentSource]):
        (-[WebFrame _commitData:]):
        (-[WebFrame _firstLayoutDone]):
        (-[WebFrame _loadType]):
        (-[WebFrame _cacheabilityDictionary]):
        (-[WebFrame _clearOpener]):
        (-[WebFrame provisionalDataSource]):
        (-[WebFrame dataSource]):
        (-[WebFrame loadRequest:]):
        (-[WebFrame _loadData:MIMEType:textEncodingName:baseURL:unreachableURL:]):
        (-[WebFrame loadArchive:]):
        (-[WebFrame stopLoading]):
        (-[WebFrame reload]):
        (-[WebFrame reloadFromOrigin]):
        * WebView/WebHTMLRepresentation.mm:
        (-[WebHTMLRepresentation receivedData:withDataSource:]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView validateUserInterfaceItemWithoutDelegate:]):
        * WebView/WebPDFView.mm:
        (-[WebPDFView PDFViewWillClickOnLink:withURL:]):
        * WebView/WebRenderLayer.mm:
        (-[WebRenderLayer initWithWebFrame:]):
        * WebView/WebRenderNode.mm:
        (-[WebRenderNode _initWithCoreFrame:]):
        * WebView/WebView.mm:
        (-[WebView _close]):
        (-[WebView _loadBackForwardListFromOtherView:]):
        (-[WebView _cachedResponseForURL:]):
        (-[WebView setCustomTextEncodingName:]):
        (-[WebView shouldClose]):

2013-08-15  Anders Carlsson  <andersca@apple.com>

        <https://webkit.org/b/119854> REGRESSION (r153379): Serious drawing issues with WebViews
        <rdar://problem/14698870>

        Reviewed by Simon Fraser.

        Don't set aside subviews if they have already been set aside.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _recursive:displayRectIgnoringOpacity:inGraphicsContext:CGContext:topView:shouldChangeFontReferenceColor:]):

2013-08-15  Eric Carlson  <eric.carlson@apple.com>

        [Mac] Remove "legacy" media UI
        https://bugs.webkit.org/show_bug.cgi?id=119752

        Reviewed by Jer Noble.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface): Remove MediaControllerThemeAvailable.

2013-08-14  Tim Horton  <timothy_horton@apple.com>

        Remotely hosted plugins don’t work in window-server-hosted WebKit1 views
        https://bugs.webkit.org/show_bug.cgi?id=119709
        <rdar://problem/14717572>

        Reviewed by Anders Carlsson.

        * Plugins/Hosted/NetscapePluginHostManager.h:
        Add hostLayersInWindowServer argument to instantiatePlugin.

        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        Add hostLayersInWindowServer argument to instantiatePlugin, and pass it through to WebKitPluginHost.

        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        (WKPCLayerHostingModeChanged):
        Forward the notification that the plugin host changed its layer hosting mode
        to the instance proxy.

        * Plugins/Hosted/NetscapePluginInstanceProxy.h:
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::setShouldHostLayersInWindowServer):
        Ask the plugin host to re-host its layers when the layer hosting mode changes.

        (WebKit::NetscapePluginInstanceProxy::layerHostingModeChanged):
        Inform the WebHostedNetscapePluginView of the new layer hosting mode
        when it changes. Also, store the new CAContext ID.

        * Plugins/Hosted/WebHostedNetscapePluginView.h:
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView windowHostsLayersInWindowServer]):
        Determine whether the WebView's current window uses window-server hosting for its layers.

        (-[WebHostedNetscapePluginView createPlugin]):
        Drive-by spelling fix.
        Factor _pluginLayer initialization out into createPluginLayer.
        Instantiate the plugin with the appropriate layer hosting mode.

        (-[WebHostedNetscapePluginView createPluginLayer]):

        (-[WebHostedNetscapePluginView setHostsLayersInWindowServer:]):
        Create a new _pluginLayer if the layer hosting mode changes.
        Attach the new _pluginLayer to our parent layer.

        (-[WebHostedNetscapePluginView updateAndSetWindow]):
        Inform the NetscapePluginInstanceProxy if the layer hosting mode changes,
        so it can inform the plugin host. We will asynchronously receive a reply
        with the new hosting mode and renderContextID and switch to the new CAContext,
        in setHostsLayersInWindowServer:.

        * Plugins/Hosted/WebKitPluginClient.defs:
        * Plugins/Hosted/WebKitPluginHost.defs:

2013-08-14  Tim Horton  <timothy_horton@apple.com>

        REGRESSION (r153877): Plugin scanning slows creation of WebViews
        https://bugs.webkit.org/show_bug.cgi?id=119665
        <rdar://problem/14716549>

        Reviewed by Darin Adler.

        * Plugins/WebPluginDatabase.h:
        * Plugins/WebPluginDatabase.mm:
        (+[WebPluginDatabase sharedDatabaseIfExists]): Added.

        * WebCoreSupport/WebPlatformStrategies.mm:
        (WebPlatformStrategies::refreshPlugins):
        Only refresh the plugin database if it's already been loaded.

2013-08-14  Jer Noble  <jer.noble@apple.com>

        Revert r154019; causes >50 tests to fail on WebKit1 bots.

        * Plugins/Hosted/NetscapePluginHostManager.h:
        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        * Plugins/Hosted/NetscapePluginInstanceProxy.h:
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        * Plugins/Hosted/WebHostedNetscapePluginView.h:
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView setAttributeKeys:andValues:]):
        (-[WebHostedNetscapePluginView createPlugin]):
        (-[WebHostedNetscapePluginView updateAndSetWindow]):
        * Plugins/Hosted/WebKitPluginClient.defs:
        * Plugins/Hosted/WebKitPluginHost.defs:

2013-08-13  Filip Pizlo  <fpizlo@apple.com>

        Foo::s_info should be Foo::info(), so that you can change how the s_info is actually linked
        https://bugs.webkit.org/show_bug.cgi?id=119770

        Reviewed by Mark Hahnenberg.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::getObjectID):
        (WebKit::NetscapePluginInstanceProxy::retainLocalObject):
        (WebKit::NetscapePluginInstanceProxy::releaseLocalObject):
        * Plugins/Hosted/ProxyInstance.mm:
        (WebKit::ProxyRuntimeMethod::finishCreation):
        (WebKit::ProxyInstance::invokeMethod):
        * Plugins/Hosted/ProxyRuntimeObject.h:
        (WebKit::ProxyRuntimeObject::createStructure):
        * WebView/WebView.mm:
        (aeDescFromJSValue):

2013-08-13  Anders Carlsson  <andersca@apple.com>

        <https://webkit.org/b/119777> Get rid of two gotos

        Reviewed by Tim Horton.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView mouseDown:]):
        (-[WebHTMLView namesOfPromisedFilesDroppedAtDestination:]):

2013-08-13  Tim Horton  <timothy_horton@apple.com>

        Remotely hosted plugins don’t work in window-server-hosted WebKit1 views
        https://bugs.webkit.org/show_bug.cgi?id=119709
        <rdar://problem/14717572>

        Reviewed by Anders Carlsson.

        * Plugins/Hosted/NetscapePluginHostManager.h:
        Add hostLayersInWindowServer argument to instantiatePlugin.

        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        Add hostLayersInWindowServer argument to instantiatePlugin, and pass it through to WebKitPluginHost.

        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        (WKPCLayerHostingModeChanged):
        Forward the notification that the plugin host changed its layer hosting mode
        to the instance proxy.

        * Plugins/Hosted/NetscapePluginInstanceProxy.h:
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::setShouldHostLayersInWindowServer):
        Ask the plugin host to re-host its layers when the layer hosting mode changes.

        (WebKit::NetscapePluginInstanceProxy::layerHostingModeChanged):
        Inform the WebHostedNetscapePluginView of the new layer hosting mode
        when it changes. Also, store the new CAContext ID.

        * Plugins/Hosted/WebHostedNetscapePluginView.h:
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView windowHostsLayersInWindowServer]):
        Determine whether the WebView's current window uses window-server hosting for its layers.

        (-[WebHostedNetscapePluginView createPlugin]):
        Drive-by spelling fix.
        Factor _pluginLayer initialization out into createPluginLayer.
        Instantiate the plugin with the appropriate layer hosting mode.

        (-[WebHostedNetscapePluginView createPluginLayer]):

        (-[WebHostedNetscapePluginView setHostsLayersInWindowServer:]):
        Create a new _pluginLayer if the layer hosting mode changes.
        Attach the new _pluginLayer to our parent layer.

        (-[WebHostedNetscapePluginView updateAndSetWindow]):
        Inform the NetscapePluginInstanceProxy if the layer hosting mode changes,
        so it can inform the plugin host. We will asynchronously receive a reply
        with the new hosting mode and renderContextID and switch to the new CAContext,
        in setHostsLayersInWindowServer:.

        * Plugins/Hosted/WebKitPluginClient.defs:
        * Plugins/Hosted/WebKitPluginHost.defs:

2013-08-08  Tim Horton  <timothy_horton@apple.com>

        navigator.plugins has plugins in it when plugins are disabled
        https://bugs.webkit.org/show_bug.cgi?id=119607
        <rdar://problem/14678030>

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebPlatformStrategies.mm:
        (WebPlatformStrategies::getPluginInfo):
        If plugins are disabled for the given page, give WebCore an empty list of
        plugins. If WebKit1 had any application plugins, we'd return just them
        instead.

2013-08-06  Stephanie Lewis  <slewis@apple.com>

        Update Order Files for Safari
        <rdar://problem/14517392>

        Unreviewed.

        * WebKit.order:

2013-08-04  Sam Weinig  <sam@webkit.org>

        Remove support for HTML5 MicroData
        https://bugs.webkit.org/show_bug.cgi?id=119480

        Reviewed by Anders Carlsson.

        * Configurations/FeatureDefines.xcconfig:

2013-07-23  David Farler  <dfarler@apple.com>

        Provide optional OTHER_CFLAGS, OTHER_CPPFLAGS, OTHER_LDFLAGS additions for building with ASAN
        https://bugs.webkit.org/show_bug.cgi?id=117762

        Reviewed by Mark Rowe.

        * Configurations/DebugRelease.xcconfig:
        Add ASAN_OTHER_CFLAGS, CPLUSPLUSFLAGS, LDFLAGS.
        * Configurations/WebKit.xcconfig:
        Add ASAN_OTHER_LDFLAGS.

2013-07-26  Mark Rowe  <mrowe@apple.com>

        Logging should be configurable using human-readable channel names rather than crazy bitmasks
        <http://webkit.org/b/119031>

        Implement shared logic for initializing logging channels based on human-readable channel names in WTF,
        and rework the WebCore, WebKit and WebKit2 logging initialization on top of it.

        Logging channels may now be enabled by providing a comma-separated list of channel names, with the special
        "all" name enabling all channels. Channel names prefixed with a leading "-" will result in the named channel
        being disabled. For instance, specifying "all,-history,-loading" will result in all logging channels except
        for history and loading being enabled.

        For OS X developers, this also changes the name of the user defaults used to enable logging. This is done to allow
        the old user defaults to remain set for those people that need to switch between version of WebKit before and
        after this change. Where the old user default keys were WebCoreLogLevel, WebKitLogLevel and WebKit2LogLevel,
        the new user default keys are WebCoreLogging, WebKitLogging and WebKit2Logging.

        For GTK developers, this changes the separator used in the WEBKIT_DEBUG environment variable to a comma for
        consistency with the other platforms and to enable more code sharing.

        While doing this work I've also taken the opportunity to eliminate the need to touch multiple files when
        adding a new logging channel. Now only the header in the relevant project needs to be updated.

        Reviewed by Sam Weinig.

        * Misc/WebKitLogging.h: Declare a WEBKIT_LOG_CHANNELS macro that can be used to apply a preprocessor macro
        across the set of all logging channels. Use this macro to declare the logging channels.
        * Misc/WebKitLogging.m: Use WEBKIT_LOG_CHANNELS to define all of the channels. Pass the channels and the
        preference value to the new WTF function that handles the initialization.
        * WebView/WebPreferenceKeysPrivate.h: Remove a key that does not need to be here.
        * WebView/WebView.mm: Switch from WebCore's InitializeLogging.h to Logging.h.

2013-08-01  Ruth Fong  <ruth_fong@apple.com>

        [Forms: color] <input type='color'> popover color well implementation
        <rdar://problem/14411008> and https://bugs.webkit.org/show_bug.cgi?id=119356

        Reviewed by Benjamin Poulain.

        * Configurations/FeatureDefines.xcconfig: Added and enabled INPUT_TYPE_COLOR_POPOVER.

2013-07-31  Tim Horton  <timothy_horton@apple.com>

        Remove didFinishLoad order quirk
        https://bugs.webkit.org/show_bug.cgi?id=119354
        <rdar://problem/11510686>

        Reviewed by Alexey Proskuryakov.

        * Misc/WebKitVersionChecks.h:
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):
        Don't set the now-removed preference.

2013-07-31  Kwang Yul Seo  <skyul@company100.net>

        Use emptyString instead of String("")
        https://bugs.webkit.org/show_bug.cgi?id=119335

        Reviewed by Darin Adler.

        Use emptyString() instead of String("") because it is better style and
        faster. This is a followup to r116908, removing all occurrences of
        String("") from WebKit.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::userAgent):

2013-07-31  Ruth Fong  <ruth_fong@apple.com>

        <input type=color> Mac UI behaviour
        <rdar://problem/10269922> and https://bugs.webkit.org/show_bug.cgi?id=61276

        Reviewed by Brady Eidson.

        * Configurations/FeatureDefines.xcconfig: Enabled INPUT_TYPE_COLOR.
        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::createColorPicker): Added stub implementation.

2013-07-26  Dean Jackson  <dino@apple.com>

        Allow new transitions to run even when controller is suspended
        https://bugs.webkit.org/show_bug.cgi?id=119171
        <rdar://problem/14511404>

        Reviewed by Simon Fraser.

        Expose a new SPI on WebView that triggers the (buggy) old behaviour
        for animations, such that any newly created animations will start even
        when the document is supposedly suspended. It turns out that client content was
        unknowingly relying on this behaviour - e.g. suspending a view, loading a
        bunch of new content, bringing the view on screen and then unsuspending. In this
        situation, we were not running CSS transitions, because the page was suspended.
        However, JS was still triggering them, and content was expecting a transitionEnd event.

        * WebView/WebView.mm:
        (-[WebView allowsNewCSSAnimationsWhileSuspended]): Calls into AnimationController.
        (-[WebView setAllowsNewCSSAnimationsWhileSuspended:]): Ditto.
        * WebView/WebViewPrivate.h: New methods listed above.

2013-07-26  Anders Carlsson  <andersca@apple.com>

        Add another method that we need to set aside subviews for
        https://bugs.webkit.org/show_bug.cgi?id=119157
        <rdar://problem/14554723>

        Reviewed by Beth Dakin.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _recursive:displayRectIgnoringOpacity:inContext:topView:]):
        (-[WebHTMLView _recursive:displayRectIgnoringOpacity:inGraphicsContext:CGContext:topView:shouldChangeFontReferenceColor:]):

2013-07-25  Andreas Kling  <akling@apple.com>

        ChromeClient::focusedNodeChanged() should be focusedElementChanged().
        <http://webkit.org/b/119110>

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::focusedElementChanged):

2013-05-05  Geoffrey Garen  <ggaren@apple.com>

        Rolled back in r149527 with crash fixed.

        Reviewed by Oliver Hunt.

            Rationalized 'this' value conversion
            https://bugs.webkit.org/show_bug.cgi?id=115542

2013-07-17  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r152701, r152703, r152739, r152754,
        and r152756.
        http://trac.webkit.org/changeset/152701
        http://trac.webkit.org/changeset/152703
        http://trac.webkit.org/changeset/152739
        http://trac.webkit.org/changeset/152754
        http://trac.webkit.org/changeset/152756
        https://bugs.webkit.org/show_bug.cgi?id=118821

        this was a buggy fix and we're going to try something
        different (Requested by thorton on #webkit).

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::shouldUnavailablePluginMessageBeButton):

2013-07-17  Kangil Han  <kangil.han@samsung.com>

        Use toHTMLMediaElement
        https://bugs.webkit.org/show_bug.cgi?id=118727

        Reviewed by Ryosuke Niwa.

        To avoid direct use of static_cast, this patch uses toHTMLMediaElement for code cleanup.

        * WebView/WebView.mm:
        (-[WebView _enterFullscreenForNode:WebCore::]):

2013-07-16  Simon Fraser  <simon.fraser@apple.com>

        Protect against the LayerFlushController being deleted inside its flushLayers() callback
        https://bugs.webkit.org/show_bug.cgi?id=118741
        <rdar://problem/14402651>

        Reviewed by Tim Horton.
        
        It's possible (especially on iOS) for the LayerFlushController to be destroyed
        inside its callback, via -[WebView _close]. Protect against this by making
        it refcounted, and holding a ref across the callback.
        
        Due to the odd relationship in which LayerFlushController owns its LayerFlushScheduler
        by value, we achieve this by allowing subclasses of LayerFlushScheduler
        to override runLoopObserverCallback(). WebViewLayerFlushScheduler uses the
        override to protect the owner of the LayerFlushScheduler, which is the
        LayerFlushController, when the callback is firing.

        * WebView/WebView.mm:
        (-[WebView _close]):
        * WebView/WebViewData.h:
        (WebViewLayerFlushScheduler::~WebViewLayerFlushScheduler):
        (LayerFlushController::create):
        * WebView/WebViewData.mm:
        (LayerFlushController::invalidate):
        (WebViewLayerFlushScheduler::WebViewLayerFlushScheduler):

2013-07-16  Jessie Berlin  <jberlin@apple.com>

        Fix some NSDictionary misuse pointed out by the clang static analyzer
        https://bugs.webkit.org/show_bug.cgi?id=118736

        Reviewed by Anders Carlsson.

        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::spawnPluginHost):
        Explicitly cast the CFStringRef to an NSString *.
        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::documentFragmentFromAttributedString):
        Do not put a key with a nil value pair into the NSDictionary.

2013-07-15  Tim Horton  <timothy_horton@apple.com>

        Update blocked/missing plug-in UI
        https://bugs.webkit.org/show_bug.cgi?id=118347
        <rdar://problem/14209318>

        Reviewed by Sam Weinig.
        Patch by Antoine Quint, Anders Carlsson, Sam Weinig, and myself.

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::shouldUnavailablePluginMessageIncludeButton):
        Rename from shouldUnavailablePluginMessageBeButton to
        shouldUnavailablePluginMessageIncludeButton for accuracy.

2013-07-14  Jon Lee  <jonlee@apple.com>

        [WK2] Calling Notification.requestPermission() without a callback crashes
        https://bugs.webkit.org/show_bug.cgi?id=118654
        <rdar://problem/14293352>

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/WebNotificationClient.mm:
        (-[WebNotificationPolicyListener initWithCallback:]): The callback can be NULL, so remove the ASSERT.
        (-[WebNotificationPolicyListener allow]): Check for the callback before asking it to handle the event.
        (-[WebNotificationPolicyListener deny]): Ditto.

2013-07-12  Jessie Berlin  <jberlin@apple.com>

        Remove some dead stores pointed out by the clang static analyzer.
        https://bugs.webkit.org/show_bug.cgi?id=118608

        Reviewed by Anders Carlsson.

        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        kr is never read after this point, so there is no reason to assign to it.

        * Plugins/WebBasePluginPackage.mm:
        (-[WebBasePluginPackage getPluginInfoFromPLists]):
        The extensions array is only used in the while loop. Move the declaration to the first place
        it is used in the while loop. Since it is always reassigned at that location, and since it
        is never read after the subsequent for loop, the assignment to an array containing the empty
        string is never used. Remove it.
        Similarly, the value of the description is always overwritten before used to assign to
        mimeClassInfo.desc or to pluginInfo.desc, so the code to assign it to the empty string is
        never used. Remove it.

        * WebView/WebTextCompletionController.mm:
        (-[WebTextCompletionController _placePopupWindow:]):
        maxWidth is never read (and never was since it was added in r7311) after it is used on the
        line above to set windowFrame.size.width.

2013-07-11  Dan Bernstein  <mitz@apple.com>

        [mac] No API for getting the page visibility state of a WebView
        https://bugs.webkit.org/show_bug.cgi?id=118578

        Reviewed by Simon Fraser.

        * WebView/WebView.mm:
        (kit): Added. Converts from WebCore::PageVisibilityState to WebPageVisibilityState.
        (-[WebView _visibilityState]): Added.
        * WebView/WebViewPrivate.h: Declared -_visibilityState.

2013-07-11  Timothy Hatcher  <timothy@apple.com>

        Revert r152267 and soft link WebInspectorUI.framework again.

        https://bugs.webkit.org/show_bug.cgi?id=118544

        Reviewed by David Kilzer.

        * Configurations/WebKit.xcconfig:
        * WebCoreSupport/WebInspectorClient.mm:
        (useWebKitWebInspector):

2013-07-10  Jessie Berlin  <jberlin@apple.com>

        Remove some dead code from WebNSURLExtras _web_hostString
        https://bugs.webkit.org/show_bug.cgi?id=118519

        Reviewed by Anders Carlsson.

        * Misc/WebNSURLExtras.mm:
        (-[NSURL _web_hostString]):
        NSString initWithData:encoding: does not throw an exception when passing nil for the data, so
        just delete the code that wasn't being run.

2013-07-09  Jeremy Noble  <jer.noble@apple.com>

        Reviewed by Simon Fraser.

        Remember the scroll position and restore after exiting full-screen mode.
        https://bugs.webkit.org/show_bug.cgi?id=61956
        <rdar://problem/9544461>

        Call into the main FrameView to save the scroll position before swapping the
        WebView into the full-screen window, and restore the scroll position after 
        swapping the WebView back into the browser window.

        * WebView/WebFullScreenController.h:
        * WebView/WebFullScreenController.mm:
        (-[WebFullScreenController windowDidEnterFullscreen:]): Save the scroll position.
        (-[WebFullScreenController exitFullscreen]): Restore the scroll position.

2013-07-04  Yongjun Zhang  <yongjun_zhang@apple.com>

        Add a method to get unreachable URL from WebFrame.
        https://bugs.webkit.org/show_bug.cgi?id=118399

        Normally we could use [[WebFrame dataSource] unreachableURL] to get the failed URL.  However, if the frame has not
        loaded (FrameLoader::frameHasLoaded() is false), we will get a nil dataSource and we won't be able to get unreachableURL.
        We can add a method to always return the unreachableURL regardless if the frame has loaded or not.

        Reviewed by Dan Bernstein.

        * WebView/WebFrame.mm:
        (-[WebFrame _unreachableURL]):
        * WebView/WebFramePrivate.h:

2013-07-03  Zalan Bujtas  <zalan@apple.com>

        H&R Block 2010 Help window can not be reopened.
        https://bugs.webkit.org/show_bug.cgi?id=118342

        Reviewed by Antti Koivisto.

        http://trac.webkit.org/changeset/118916 changed the window.focus() behaviour so that
        only the opener can (re)focus() a particular window.
        H&R Block app relies on the relaxed window.focus() rules.

        * WebView/WebView.mm:
        (shouldRestrictWindowFocus):
        (-[WebView _preferencesChanged:]):

2013-07-01  Timothy Hatcher  <timothy@apple.com>

        Link to WebInspectorUI.framework at build time instead of soft linking.

        https://bugs.webkit.org/show_bug.cgi?id=118261

        Reviewed by Joseph Pecoraro.

        * Configurations/WebKit.xcconfig:
        * WebCoreSupport/WebInspectorClient.mm:
        (useWebKitWebInspector):

2013-07-01  Jochen Eisinger  <jochen@chromium.org>

        Remove support for consumable user gestures
        https://bugs.webkit.org/show_bug.cgi?id=118247

        Reviewed by Geoffrey Garen.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::evaluate):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView sendEvent:isDrawRect:]):

2013-06-27  Jer Noble  <jer.noble@apple.com>

        Audio in apps which embed WebViews is corrupted.
        https://bugs.webkit.org/show_bug.cgi?id=118163

        Reviewed by Maciej Stachowiak.

        Expose the WebCore lowPowerVideoAudioBufferSizeEnabled setting to WebKit clients.

        * WebView/WebPreferenceKeysPrivate.h:
        * WebView/WebPreferences.mm:
        (+[WebPreferences initialize]):
        (-[WebPreferences lowPowerVideoAudioBufferSizeEnabled]):
        (-[WebPreferences setLowPowerVideoAudioBufferSizeEnabled:]):
        * WebView/WebPreferencesPrivate.h:
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-07-01  Kangil Han  <kangil.han@samsung.com>

        Adopt toHTMLTextAreaElement for code cleanup
        https://bugs.webkit.org/show_bug.cgi?id=118226

        Reviewed by Andreas Kling.

        To enhance readability, this patch adopts toHTMLTextAreaElement.
        This also helps out to reduce duplicated use of static_cast.

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::textDidChangeInTextArea):

2013-06-27  Kangil Han  <kangil.han@samsung.com>

        Adopt is/toHTMLInputElement for code cleanup
        https://bugs.webkit.org/show_bug.cgi?id=118130

        Reviewed by Antti Koivisto.

        To enhance readability, this patch adopts is/toHTMLInputElement.
        This also helps out to reduce duplicated use of static_cast.

        * DOM/WebDOMOperations.mm:
        (-[DOMHTMLInputElement _setAutofilled:]):
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::focusedNodeChanged):
        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::textFieldDidBeginEditing):
        (WebEditorClient::textFieldDidEndEditing):
        (WebEditorClient::textDidChangeInTextField):
        (WebEditorClient::doTextFieldCommandFromEvent):
        (WebEditorClient::textWillBeDeletedInTextField):
        * WebView/WebHTMLRepresentation.mm:
        (inputElementFromDOMElement):

2013-06-26  Kangil Han  <kangil.han@samsung.com>

        Adopt is/toHTMLAudioElement for code cleanup
        https://bugs.webkit.org/show_bug.cgi?id=117985

        Reviewed by Jer Noble.

        To enhance readibility, this patch adopts is/toHTMLAudioElement.
        This also helps out to reduce duplicated use of static_cast.

        * Plugins/WebPluginController.mm:

2013-06-24  Simon Fraser  <simon.fraser@apple.com>

        Move displayID stuff from Widget to Chrome
        https://bugs.webkit.org/show_bug.cgi?id=117944

        Reviewed by Anders Carlsson.

        In r151877 I polluted Widget with displayID-related stuff. This would
        be better on HostWindow, so move it there. This is a net code reduction,
        and eliminates PlatformScreenMac.h, and the NSScreen category.

        * WebView/WebView.mm:
        (-[WebView doWindowDidChangeScreen]): Go via chrome().

2013-06-21  Christophe Dumez  <ch.dumez@sisa.samsung.com>

        REGRESSION (r150663): Using webkitAudioContext in Inspector makes it undefined everywhere
        https://bugs.webkit.org/show_bug.cgi?id=117825

        Reviewed by Kentaro Hara.

        Use Settings to enable Web Audio instead of RuntimeEnabledFeatures.

        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-06-20  Simon Fraser  <simon.fraser@apple.com>

        FrameView needs to initialize paintsEntireContents on creation
        https://bugs.webkit.org/show_bug.cgi?id=117844

        Reviewed by Anders Carlsson.
        
        In WebKit1, if the WebView is layer-backed, WebHTMLView gets a layer.
        In this mode, FrameView::paintsEntireContents() is true. However,
        we would only call setPaintsEntireContents(true) on the FrameView
        when the view's layer-backed status changes. FrameView also needs
        to fetch this state when it is initialized, because we may be creating
        a new FrameView for an already layer-backed WebHTMLView.

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::shouldPaintEntireContents):

2013-06-19  Benjamin Poulain  <bpoulain@apple.com>

        Use the PlatformEvent timestamp when creating a DOM Event
        https://bugs.webkit.org/show_bug.cgi?id=117179

        Reviewed by Darin Adler.

        * WebView/WebPDFView.mm:
        (-[WebPDFView PDFViewWillClickOnLink:withURL:]):

2013-06-18  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Build fix for Mac.

        * WebCoreSupport/WebFrameNetworkingContext.h:
        (WebFrameNetworkingContext::create):
        (WebFrameNetworkingContext::WebFrameNetworkingContext):

2013-06-18  Roger Fong  <roger_fong@apple.com>

        Re-implement WebFrameNetworkingContext.
        <rdar://problem/13174821>.

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/WebFrameNetworkingContext.h: Added.
        (WebFrameNetworkingContext::create):
        (WebFrameNetworkingContext::WebFrameNetworkingContext):
        (WebFrameNetworkingContext::userAgent):
        * WebCoreSupport/WebFrameNetworkingContext.mm: Added.
        (WebFrameNetworkingContext::ensurePrivateBrowsingSession):
        (WebFrameNetworkingContext::destroyPrivateBrowsingSession):
        (WebFrameNetworkingContext::needsSiteSpecificQuirks):
        (WebFrameNetworkingContext::localFileContentSniffingEnabled):
        (WebFrameNetworkingContext::scheduledRunLoopPairs):
        (WebFrameNetworkingContext::sourceApplicationAuditData):
        (WebFrameNetworkingContext::blockedError):
        (WebFrameNetworkingContext::storageSession):

2013-06-18  Alexey Proskuryakov  <ap@apple.com>

        <rdar://problem/13174821> Remove files with an incorrect license.

        Rubber-stamped by Maciej Stachowiak.

        This will break the build, stay tuned for a fix coming soon.

        * WebCoreSupport/WebFrameNetworkingContext.h: Removed.
        * WebCoreSupport/WebFrameNetworkingContext.mm: Removed.

2013-06-17  Michael Brüning  <michael.bruning@digia.com>

        [Qt] Remove Qt specific QTKIT flagged code.
        https://bugs.webkit.org/show_bug.cgi?id=117635

        Reviewed by Simon Hausmann.

        Due to disabling QTKIT for Qt in r151546, the
        code the flags that are not taken into account
        anymore and the code that has been rendered
        unreachable by this are removed.

        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-06-17  Grzegorz Czajkowski  <g.czajkowski@samsung.com>

        Unreviewed, rolling out r151632.
        http://trac.webkit.org/changeset/151632
        https://bugs.webkit.org/show_bug.cgi?id=117585

        Debug build error ASSERT(WTF_USE_GRAMMAR_CHECKING) for non MAC
        platforms

        * WebCoreSupport/WebContextMenuClient.mm:
        (fixMenusReceivedFromOldClients):

2013-06-14  Grzegorz Czajkowski  <g.czajkowski@samsung.com>

        Context menu grammar checking items are available when GRAMMAR_CHECKING macro is off
        https://bugs.webkit.org/show_bug.cgi?id=117585

        Reviewed by Anders Carlsson.

        Add GRAMMAR_CHECKING guard to the context menu grammar items.

        * WebCoreSupport/WebContextMenuClient.mm:
        (fixMenusReceivedFromOldClients):

2013-06-13  Jer Noble  <jer.noble@apple.com>

        Add support for AVFoundation-backed HTMLMediaElements in the WebVideoFullScreenController.
        https://bugs.webkit.org/show_bug.cgi?id=117597

        Reviewed by Eric Carlson.

        Allow AVFoundation to be enabled even when the FullScreen API is disabled.

        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]): 

2013-06-12  Anders Carlsson  <andersca@apple.com>

        Remove the notion of inactive plug-ins
        https://bugs.webkit.org/show_bug.cgi?id=117570
        <rdar://problem/13484213>

        Reviewed by Tim Horton.

        Remove code that deals with inactive plug-ins.

        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::shouldUnavailablePluginMessageBeButton):
        (WebChromeClient::unavailablePluginButtonClicked):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::createPlugin):

2013-06-12  Zan Dobersek  <zdobersek@igalia.com>

        Remove memoryInfoEnabled, quantizedMemoryInfoEnabled settings
        https://bugs.webkit.org/show_bug.cgi?id=117512

        Reviewed by Darin Adler.

        * WebKit.order: Remove the memoryInfoEnabled entry.
        * WebView/WebPreferenceKeysPrivate.h: Remove WebKitMemoryInfoEnabledPreferenceKey.
        * WebView/WebPreferences.mm: Remove memoryInfoEnabled, setMemoryInfoEnabled methods.
        (+[WebPreferences initialize]): Don't set the default value for the WebKitMemoryInfoEnabledPreferenceKey, the preference is being removed.
        * WebView/WebPreferencesPrivate.h: Remove memoryInfoEnabled, setMemoryInfoEnabled method declarations.
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]): Remove the call to Settings::setMemoryInfoEnabled, the setting is being removed.

2013-06-06  Timothy Hatcher  <timothy@apple.com>

        Update the framework bundle identifier for the Web Inspector.

        Reviewed by Mark Rowe.

        * WebCoreSupport/WebInspectorClient.mm:
        (useWebKitWebInspector):
        (WebInspectorFrontendClient::localizedStringsURL):
        (-[WebInspectorWindowController inspectorPagePath]):

2013-06-05  Bear Travis  <betravis@adobe.com>

        [CSS Exclusions][CSS Shapes] Split CSS Exclusions & Shapes compile & runtime flags
        https://bugs.webkit.org/show_bug.cgi?id=117172

        Reviewed by Alexandru Chiculita.

        Adding the CSS_SHAPES compile flag.

        * Configurations/FeatureDefines.xcconfig:

2013-06-01  Andreas Kling  <akling@apple.com>

        Remove unnused WebDOMNodeOperationsInternal category.
        <http://webkit.org/b/117105>

        Reviewed by Ryosuke Niwa.

        _subresourceURLs had no clients.

        * DOM/WebDOMOperations.mm:

2013-06-01  Andreas Kling  <akling@apple.com>

        Move Node::hasID() and hasClass() to Element.
        <http://webkit.org/b/117104>

        Reviewed by Ryosuke Niwa.

        * WebView/WebRenderLayer.mm:
        (+[WebRenderLayer nameForLayer:]):

2013-06-05  Stephanie Lewis  <slewis@apple.com>

        Update low memory handler to use new memory pressure notifications on new OS versions.
        <rdar://problem/14027095> 

        Reviewed by Mark Rowe.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-05-29  Jeffrey Pfau  <jpfau@apple.com>

        [Mac] Enable cache partitioning and the public suffix list on 10.8
        <rdar://problem/13679019>

        Rubber-stamped by David Kilzer.

        * Configurations/FeatureDefines.xcconfig:

2013-05-29  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: get rid of obsolete InspectorFrontendHost.hiddenPanels()
        https://bugs.webkit.org/show_bug.cgi?id=60152

        Reviewed by Andreas Kling.

        * WebCoreSupport/WebInspectorClient.mm:

2013-05-28  Joseph Pecoraro  <pecoraro@apple.com>

        Drag to move DOM nodes does not work
        https://bugs.webkit.org/show_bug.cgi?id=116865

        Do not block drag events on the WebKit 1 Web Inspector WebView.

        Reviewed by Timothy Hatcher.

        * WebCoreSupport/WebInspectorClient.mm:

2013-05-28  Andreas Kling  <akling@apple.com>

        Document::setFocusedNode() should be setFocusedElement().
        <http://webkit.org/b/116857>

        Reviewed by Antti Koivisto.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView clearFocus]):
        (-[WebHTMLView becomeFirstResponder]):

2013-05-25  Andreas Kling  <akling@apple.com>

        Remove Document::getFocusableNodes().
        <http://webkit.org/b/116773>

        Reviewed by Joseph Pecoraro.

        Remove the private _focusableNodes API on DOMDocument, it has no clients.

        * DOM/WebDOMOperations.mm:
        * DOM/WebDOMOperationsPrivate.h:

2013-05-25  Simon Fraser  <simon.fraser@apple.com>

        Unprefix Page Visibility API
        https://bugs.webkit.org/show_bug.cgi?id=102340

        Reviewed by Tim Horton.

        Renaming of the "preview" state to "unloaded".

        * WebView/WebView.mm:
        * WebView/WebViewPrivate.h:

2013-05-25  Dan Bernstein  <mitz@apple.com>

        <rdar://problem/13924889> -webView:didPerformClientRedirectFromURL:toURL:inFrame: should be given the redirecting URL as the “from” URL
        https://bugs.webkit.org/show_bug.cgi?id=116733

        Reviewed by Adele Peterson.

        By the time the history controller calls updateGlobalHistoryRedirectLinks(), the document
        loader already reflects the destination URL. In order to be able to provide the immediate
        source URL to the delegate, we make WebFrame track a URL and provisional URL, updating them
        in response to FrameLoader callbacks in exactly the same way WebFrameProxy maintains its
        m_url and m_provisionalURL member variables.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::dispatchDidReceiveServerRedirectForProvisionalLoad): Update
        provisionalURL.
        (WebFrameLoaderClient::dispatchDidChangeLocationWithinPage): Update url.
        (WebFrameLoaderClient::dispatchDidPushStateWithinPage): Ditto.
        (WebFrameLoaderClient::dispatchDidReplaceStateWithinPage): Ditto.
        (WebFrameLoaderClient::dispatchDidPopStateWithinPage): Ditto.
        (WebFrameLoaderClient::dispatchDidStartProvisionalLoad): Update provisionalURL.
        (WebFrameLoaderClient::dispatchDidCommitLoad): Update URL and provisionalURL.
        (WebFrameLoaderClient::dispatchDidFailProvisionalLoad): Clear provisionalURL.
        (WebFrameLoaderClient::dispatchDidFailLoad): Added an assertion.
        (WebFrameLoaderClient::dispatchDidFinishLoad): Ditto.
        (WebFrameLoaderClient::updateGlobalHistoryRedirectLinks): Pass the last committed URL as the
        source, rather than clientRedirectSourceForHistory().
        * WebView/WebFrameInternal.h: Added url and provisionalURL ivars to WebFramePrivate.

2013-05-24  Anders Carlsson  <andersca@apple.com>

        Remove using namespace std from Mac WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=116747

        Reviewed by Sam Weinig.

        Use explicit std:: qualifiers instead.

        * History/BinaryPropertyList.cpp:
        (IntegerArray::deletedValueSize):
        (BinaryPropertyListPlan::invalidObjectReference):
        (bytesNeeded):
        * History/WebHistory.mm:
        (-[WebHistoryPrivate orderedLastVisitedDays]):
        (WebHistoryWriter::WebHistoryWriter):
        * History/WebHistoryItem.mm:
        (-[WebHistoryItem initFromDictionaryRepresentation:]):
        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::LocalObjectMap::idForObject):
        (WebKit::NetscapePluginInstanceProxy::wheelEvent):
        (WebKit::NetscapePluginInstanceProxy::print):
        (WebKit::NetscapePluginInstanceProxy::snapshot):
        (WebKit::NetscapePluginInstanceProxy::loadURL):
        (WebKit::NetscapePluginInstanceProxy::createBindingsInstance):
        * Plugins/Hosted/ProxyInstance.mm:
        (WebKit::ProxyInstance::invoke):
        (WebKit::ProxyInstance::supportsInvokeDefaultMethod):
        (WebKit::ProxyInstance::supportsConstruct):
        (WebKit::ProxyInstance::getPropertyNames):
        (WebKit::ProxyInstance::methodNamed):
        (WebKit::ProxyInstance::fieldNamed):
        (WebKit::ProxyInstance::fieldValue):
        (WebKit::ProxyInstance::setFieldValue):
        * Plugins/WebBasePluginPackage.mm:
        (-[WebBasePluginPackage supportsExtension:]):
        (-[WebBasePluginPackage MIMETypeForExtension:]):
        * Plugins/WebNetscapePluginStream.mm:
        (WebNetscapePluginStream::deliverData):
        * Plugins/WebNetscapePluginView.mm:
        (PluginTimer::start):
        (-[WebNetscapePluginView _postURL:target:len:buf:file:notifyData:sendNotification:allowHeaders:]):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        * WebView/WebFrame.mm:
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _adjustedBottomOfPageWithTop:bottom:limit:]):
        * WebView/WebTextCompletionController.mm:
        (-[WebTextCompletionController _placePopupWindow:]):

2013-05-24  Anders Carlsson  <andersca@apple.com>

        Move history property list writer to WebKit
        https://bugs.webkit.org/show_bug.cgi?id=116746

        Reviewed by Tim Horton.

        Move WebCore history files to WebKit since they're only used by WebKit now.

        * History/BinaryPropertyList.cpp: Renamed from Source/WebCore/platform/cf/BinaryPropertyList.cpp.
        * History/BinaryPropertyList.h: Renamed from Source/WebCore/platform/cf/BinaryPropertyList.h.
        * History/HistoryPropertyList.cpp: Renamed from Source/WebCore/history/cf/HistoryPropertyList.cpp.
        * History/HistoryPropertyList.h: Renamed from Source/WebCore/history/cf/HistoryPropertyList.h.
        * History/WebHistory.mm:

2013-05-24  Christophe Dumez  <ch.dumez@sisa.samsung.com>

        Remove custom code for webkitAudioContext global constructor getter
        https://bugs.webkit.org/show_bug.cgi?id=116530

        Reviewed by Geoffrey Garen.

        Use RuntimeEnabledFeatures instead of Settings to toggle Web Audio support.

        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-05-23  Anders Carlsson  <andersca@apple.com>

        Crash in convertMainResourceLoadToDownload when downloading file by option-return
        https://bugs.webkit.org/show_bug.cgi?id=116451

        Reviewed by Andreas Kling.

        If the main resource loader is null, create a new download instead since there's no existing loader to convert.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::convertMainResourceLoadToDownload):

2013-05-22  Simon Fraser  <simon.fraser@apple.com>

        Fix issues with focus rings on search fields
        https://bugs.webkit.org/show_bug.cgi?id=116591

        Reviewed by Darin Adler.
        
        In WebKit1, focus rings didn't render correctly on some OSes until
        some other control drew a focus ring, which changes internal AppKit state
        on the focused view. Fix by overriding an internal AppKit method to always
        disable AppKit's "automatic" focus ring drawing.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _automaticFocusRingDisabled]):

2013-05-20  David Kilzer  <ddkilzer@apple.com>

        Synchronize FeatureDefines.xcconfig

        * Configurations/FeatureDefines.xcconfig: Add a newline to the
        end of the file.

2013-05-19  Anders Carlsson  <andersca@apple.com>

        Remove link prerendering code
        https://bugs.webkit.org/show_bug.cgi?id=116415

        Reviewed by Darin Adler.

        This code was only used by Chromium and is dead now.

        * Configurations/FeatureDefines.xcconfig:

2013-05-19  Anders Carlsson  <andersca@apple.com>

        Remove ChromeClient::webView()
        https://bugs.webkit.org/show_bug.cgi?id=116054

        Reviewed by Darin Adler.

        This blatantly horrible layer violation was only used to know if a ChromeClient is an empty
        client or not. We already have a (slightly less horrible) way to do that.

        * WebCoreSupport/WebChromeClient.h:
        (WebChromeClient):

2013-05-17  Anders Carlsson  <andersca@apple.com>

        Accessing null function pointers is bad.

        * WebCoreSupport/WebFrameLoaderClient.mm:

2013-05-17  Anders Carlsson  <andersca@apple.com>

        Make kit(Frame*) more robust
        https://bugs.webkit.org/show_bug.cgi?id=116324

        Reviewed by Darin Adler.

        Check that the frame loader's client isn't the EmptyFrameLoaderClient (or a subclass thereof)
        before casting to WebFrameLoaderClient.

        * WebView/WebFrame.mm:
        (kit):

2013-05-17  Anders Carlsson  <andersca@apple.com>

        Move the policy function to WebFramePolicyListener
        https://bugs.webkit.org/show_bug.cgi?id=116323

        Reviewed by Darin Adler.

        There's no need for the WebFrameLoaaderClient to hold on to the policy function,
        so move it to WebFramePolicyListener. This gets rid of another WebFrameLoaderClient cast.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::setUpPolicyListener):
        Pass the policy function when creating the WebFramePolicyListener object.

2013-05-17  Anders Carlsson  <andersca@apple.com>

        WebFramePolicyListener should keep its Frame in a RefPtr
        https://bugs.webkit.org/show_bug.cgi?id=116322

        Reviewed by Darin Adler.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (-[WebFramePolicyListener initWithWebCoreFrame:]):
        No need to ref the frame, the RefPtr does that for us.

        (-[WebFramePolicyListener invalidate]):
        Just set the frame to null.

        (-[WebFramePolicyListener dealloc]):
        Remove call to deref, that's done automatically now.

        (-[WebFramePolicyListener finalize]):
        Remove this method. (We could have kept it just for the assertion but I didn't think that was necessary).

        (-[WebFramePolicyListener receivedPolicyDecision:):
        Use release() to transfer ownership.

2013-05-17  Anders Carlsson  <andersca@apple.com>

        Reduce number of WebFrameLoaderClient static casts in WebKit
        https://bugs.webkit.org/show_bug.cgi?id=116320

        Reviewed by Antti Koivisto.

        We already have a function to return a WebFrame from a WebCore::Frame, use it.

        * DOM/WebDOMOperations.mm:
        (WebFrameFilter::shouldIncludeSubframe):
        * WebView/WebDataSource.mm:
        (-[WebDataSource webFrame]):

2013-05-16  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r150034.
        http://trac.webkit.org/changeset/150034
        https://bugs.webkit.org/show_bug.cgi?id=116257

        This work around doesn't work due to another bug NSUndoManager
        has (Requested by rniwa on #webkit).

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::registerUndoOrRedoStep):

2013-05-16  Tim Horton  <timothy_horton@apple.com>

        PDFPlugins don't load when plugins are disabled, but they should
        https://bugs.webkit.org/show_bug.cgi?id=75790
        <rdar://problem/11650197>

        Reviewed by Anders Carlsson.

        * Plugins/WebBasePluginPackage.mm:
        (-[WebBasePluginPackage getPluginInfoFromPLists]):
        * Plugins/WebNetscapePluginPackage.mm:
        (-[WebNetscapePluginPackage getPluginInfoFromResources]):
        Nothing loaded via WebBasePluginPackage or WebNetscapePluginPackage
        is an application plugin.

        * WebView/WebFrame.mm:
        (-[WebFrame _canProvideDocumentSource]):
        Previously, this caller depended on pluginData() returning null if
        plug-ins were disabled. Since that is no longer the case, we have to
        check if we can use plug-ins, and otherwise ignore non-application-plug-ins.

2013-05-16  Andreas Kling  <akling@apple.com>

        Page::chrome() should return a reference.
        <http://webkit.org/b/116185>

        Reviewed by Anders Carlsson.

2013-05-16  Dan Bernstein  <mitz@apple.com>

        -webView:updateHistoryTitle:forURL: does not pass a frame to the delegate
        https://bugs.webkit.org/show_bug.cgi?id=116243

        Reviewed by Anders Carlsson.

        Added a WebFrame parameter to the delegate method.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::setTitle): Pass the frame to the delegate. Maintain
        compatibility with clients that implement the old delegate method that
        doesn’t take a frame.
        * WebView/WebDelegateImplementationCaching.h:
        (WebHistoryDelegateImplementationCache): Added a field to cache the
        implementation of the old delegate method.
        * WebView/WebHistoryDelegate.h: Changed the signature of the delegate method.
        * WebView/WebView.mm:
        (-[WebView _cacheHistoryDelegateImplementations]): Cache the implementation
        of the new delegate method, but also check for the old one.

2013-05-16  Simon Fraser  <simon.fraser@apple.com>

        Re-land r150168 with some OS version guards.

        * WebView/WebFrameView.mm:
        (-[WebFrameView drawRect:]):
        (-[WebFrameView wantsUpdateLayer]):
        (-[WebFrameView updateLayer]):

2013-05-16  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r150168.
        http://trac.webkit.org/changeset/150168
        https://bugs.webkit.org/show_bug.cgi?id=116214

        broke the world on Mountain Lion (Requested by thorton on
        #webkit).

        * WebView/WebFrameView.mm:
        (-[WebFrameView drawRect:]):

2013-05-15  Simon Fraser  <simon.fraser@apple.com>

        Avoid backing store for the WebFrameView's layer when the WebView is layer-backed
        https://bugs.webkit.org/show_bug.cgi?id=116172

        Reviewed by Tim Horton.

        When the WebView is layer-backed, AppKit will create a layer with backing store for
        the WebFrameView because it implements drawRect:. However, this method only paints
        when there is no documentView, so this layer’s backing store is wasteful.

        We can avoid allocation of this backing store by implementing -wantsUpdateLayer
        and -updateLayer, and setting the view’s backgroundColor.

        * WebView/WebFrameView.mm:
        (-[WebFrameView wantsUpdateLayer]):
        (-[WebFrameView updateLayer]):

2013-05-13  Anders Carlsson  <andersca@apple.com>

        Frame::editor() should return a reference
        https://bugs.webkit.org/show_bug.cgi?id=116037

        Reviewed by Darin Adler.

        * WebView/WebFrame.mm:
        (-[WebFrame _selectedString]):
        (-[WebFrame _firstRectForDOMRange:]):
        (-[WebFrame _markDOMRange]):
        (-[WebFrame _insertParagraphSeparatorInQuotedContent]):
        (-[WebFrame _setTypingStyle:withUndoAction:]):
        (-[WebFrame _replaceSelectionWithFragment:selectReplacement:smartReplace:matchStyle:]):
        * WebView/WebHTMLRepresentation.mm:
        (-[WebHTMLRepresentation finishedLoadingWithDataSource:]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _pasteWithPasteboard:allowPlainText:]):
        (-[WebHTMLView _shouldDeleteRange:]):
        (-[WebHTMLView _canEdit]):
        (-[WebHTMLView _canEditRichly]):
        (-[WebHTMLView _insertOrderedList]):
        (-[WebHTMLView _insertUnorderedList]):
        (-[WebHTMLView _canIncreaseSelectionListLevel]):
        (-[WebHTMLView _canDecreaseSelectionListLevel]):
        (-[WebHTMLView _increaseSelectionListLevel]):
        (-[WebHTMLView _increaseSelectionListLevelOrdered]):
        (-[WebHTMLView _increaseSelectionListLevelUnordered]):
        (-[WebHTMLView _decreaseSelectionListLevel]):
        (-[WebHTMLView Editor::coreCommandBySelector:]):
        (-[WebHTMLView Editor::coreCommandByName:]):
        (-[WebHTMLView validateUserInterfaceItemWithoutDelegate:]):
        (-[WebHTMLView becomeFirstResponder]):
        (-[WebHTMLView _selectionStartFontAttributesAsRTF]):
        (-[WebHTMLView _applyStyleToSelection:withUndoAction:]):
        (-[WebHTMLView _changeCSSColorUsingSelector:inRange:]):
        (-[WebHTMLView checkSpelling:]):
        (-[WebHTMLView showGuessPanel:]):
        (-[WebHTMLView toggleBaseWritingDirection:]):
        (-[WebHTMLView changeBaseWritingDirection:]):
        (-[WebHTMLView _changeBaseWritingDirectionTo:]):
        (-[WebHTMLView _updateFontPanel]):
        (-[WebHTMLView markedRange]):
        (-[WebHTMLView hasMarkedText]):
        (-[WebHTMLView unmarkText]):
        (-[WebHTMLView setMarkedText:selectedRange:]):
        (-[WebHTMLView doCommandBySelector:]):
        (-[WebHTMLView insertText:]):
        (-[WebHTMLView _updateSelectionForInputManager]):
        (-[WebHTMLView countMatchesForText:inDOMRange:options:limit:markMatches:]):
        (-[WebHTMLView setMarkedTextMatchesAreHighlighted:]):
        (-[WebHTMLView markedTextMatchesAreHighlighted]):
        (-[WebHTMLView _findString:options:]):
        * WebView/WebView.mm:
        (-[WebView _executeCoreCommandByName:value:]):
        (-[WebView editableDOMRangeForPoint:]):
        (-[WebView setEditable:]):
        (-[WebView deleteSelection]):
        (-[WebView applyStyle:]):
        (-[WebView typingAttributes]):
        (-[WebView _simplifyMarkup:endNode:]):
        (-[WebView handleAcceptedAlternativeText:]):

2013-05-15  Darin Adler  <darin@apple.com>

        [Mac] Remove the ClipboardMac class and header file
        https://bugs.webkit.org/show_bug.cgi?id=116165

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebDragClient.mm: Import Clipboard.h instead of ClipboardMac.h.

2013-05-15  Darin Adler  <darin@apple.com>

        [Mac] Thin out the ClipboardMac class and header file to prepare for deleting them
        https://bugs.webkit.org/show_bug.cgi?id=116159

        Reviewed by Andreas Kling.

        * WebCoreSupport/WebDragClient.mm:
        (WebDragClient::willPerformDragSourceAction): Changed to get the pasteboard name
        without going through the ClipboardMac class.
        (WebDragClient::startDrag): Ditto.

2013-05-14  Beth Dakin  <bdakin@apple.com>

        Printing in 1Password app is broken with screen fonts disabled
        https://bugs.webkit.org/show_bug.cgi?id=116133
        -and corresponding-
        <rdar://problem/13162981>

        Reviewed by Anders Carlsson.

        Return YES from [WebPreferences screenFontSubstitutionEnabled] for versions of the 
        1Password app that were linked on or before MountainLion.

        * WebView/WebPreferences.mm:
        (needsScreenFontsEnabledQuirk):
        (-[WebPreferences screenFontSubstitutionEnabled]):

2013-05-13  Dan Bernstein  <mitz@apple.com>

        Make -[WebNavigationData url] the destination of the navigation
        https://bugs.webkit.org/show_bug.cgi?id=114904

        Reviewed by Dave Kilzer.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::updateGlobalHistory): Initialize the WebNavigationData with the
        current URL, not the original request URL.

2013-05-13  Anders Carlsson  <andersca@apple.com>

        Remove ChromeClient::willPopupMenu
        https://bugs.webkit.org/show_bug.cgi?id=116063

        Reviewed by Andreas Kling.

        ChromeClient::willPopupMenu is only called in one place from WebKit, so just move the function to the call site.

        * WebCoreSupport/PopupMenuMac.mm:
        (PopupMenuMac::show):
        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:

2013-05-12  Timothy Hatcher  <timothy@apple.com>

        Add support for updating the Web Inspector toolbar height.

        https://bugs.webkit.org/show_bug.cgi?id=115996

        Reviewed by Joseph Pecoraro and Benjamin Poulain.

        * WebCoreSupport/WebInspectorClient.h:
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorFrontendClient::setToolbarHeight):

2013-05-13  Ryosuke Niwa  <rniwa@webkit.org>

        Sometimes NSUndoManager can get into an inconsistent state
        https://bugs.webkit.org/show_bug.cgi?id=116050

        Reviewed by Enrica Casucci.

        Always group undo items to work around a bug in NSUndoManager that manifests
        when we call removeAllActionsWithTarget.

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::registerUndoOrRedoStep):

2013-05-13  Zalan Bujtas  <zalan@apple.com>

        WebProcess consuming very high CPU on linkedin.com
        https://bugs.webkit.org/show_bug.cgi?id=115601

        Reviewed by Andreas Kling.

        Disable WEB_TIMING_MINIMAL.
        Turn off window.performance and performance.now(). Some JS frameworks expect
        additional Web Timing APIs, when performance.now() is available.

        * Configurations/FeatureDefines.xcconfig:

2013-05-13  Darin Adler  <darin@apple.com>

        [Mac] Layer-backed WebViews draw their background color even when setDrawsBackground:NO was called
        https://bugs.webkit.org/show_bug.cgi?id=116014
        <rdar://problem/12781227>

        Reviewed by Dan Bernstein.

        * WebView/WebFrame.mm:
        (-[WebFrame _updateBackgroundAndUpdatesWhileOffscreen]): Remove calls to setBackgroundColor: and
        setDrawsBackground: on the document view. These were added to support a hypothetical document view
        that wanted to draw its background like WebHTMLView does, but this was never communicated as a
        document view protocol, formal or informal, and it's unlikely that it was ever used. The bug was
        caused because there is an -[NSView setDrawsBackground:] method, probably an internal one, and we
        were calling it unintentionally on a WebHTMLView.

2013-05-12  Anders Carlsson  <andersca@apple.com>

        Stop including UnusedParam.h
        https://bugs.webkit.org/show_bug.cgi?id=116003

        Reviewed by Sam Weinig.

        UnusedParam.h is empty now so there's no need to include it anymore.

        * Plugins/WebNetscapePluginEventHandlerCocoa.mm:
        * WebView/WebDashboardRegion.mm:
        * WebView/WebFullScreenController.mm:

2013-05-12  Andreas Kling  <akling@apple.com>

        Unload event listeners should prevent Safari from insta-killing the web process on last tab close.
        <http://webkit.org/b/115988>
        <rdar://problem/13870943>

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::enableSuddenTermination):
        (WebChromeClient::disableSuddenTermination):

2013-05-10  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: Implement WK2 version of WebInspectorFrontendClient::save
        https://bugs.webkit.org/show_bug.cgi?id=115564

        Reviewed by Benjamin Poulain.

        Clean up save() and append() implementations.

        * WebCoreSupport/WebInspectorClient.h:
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorFrontendClient::save):
        (WebInspectorFrontendClient::append):

2013-05-10  Laszlo Gombos  <l.gombos@samsung.com>

        Remove Mac OS X Leopard (10.5) support
        https://bugs.webkit.org/show_bug.cgi?id=107964

        Reviewed by Ryosuke Niwa.

        Removed the code for 10.5 and removed if-def for 10.6.

        * DefaultDelegates/WebDefaultContextMenuDelegate.mm:
        * Misc/WebKitErrors.m:
        (-[NSError _initWithPluginErrorCode:contentURL:pluginPageURL:pluginName:MIMEType:]):
        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):
        * WebView/WebClipView.mm:
        (-[WebClipView _immediateScrollToPoint:]):
        * WebView/WebFrameView.mm:
        (-[WebFrameView initWithFrame:]):
        * WebView/WebView.mm:

2013-05-07  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/13633007> WebKit and others fail to build headers due to build root dependency

        Reviewed by Sam Weinig.

        * Configurations/WebKit.xcconfig: Look for WebCore's headers within the SDK if we're building against one.

2013-05-07  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        HashTraits<RefPtr<P> >::PeekType should be raw pointer for better performance
        https://bugs.webkit.org/show_bug.cgi?id=115646

        Reviewed by Darin Adler.

        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        (WebKit::NetscapePluginHostProxy::pluginInstance):
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::cancelStreamLoad):
            Updated accordingly to new HashMap<.., RefPtr>::get() semantics.

2013-05-04  Dean Jackson  <dino@apple.com>

        Animations and Transitions should not start when globally suspended
        https://bugs.webkit.org/show_bug.cgi?id=114915

        Reviewed by Sam Weinig.

        The WebView private API cssAnimationsSuspended did not necessarily
        reflect the reality of the Frame's AnimationController value because it
        was caching rather than asking directly. While the WebCore part of this
        patch ensured loading the Document wouldn't resume all animations, it
        is still better to ask directly.

        * WebView/WebView.mm:
        (-[WebView cssAnimationsSuspended]): Call into AnimationController.
        (-[WebView setCSSAnimationsSuspended:]): Ditto.
        * WebView/WebViewData.h: Remove cssAnimationsSuspended boolean.
        * WebView/WebViewData.mm: Ditto.
        (-[WebViewPrivate init]):

2013-05-04  Sam Weinig  <sam@webkit.org>

        Move PopupMenuMac and SearchPopupMenuMac to Source/WebKit/mac
        matching where they are in WebKit2.

        Reviewed by Anders Carlsson.

        * WebCoreSupport/PopupMenuMac.h: Copied from WebCore/platform/mac/PopupMenuMac.h.
        * WebCoreSupport/PopupMenuMac.mm: Copied from WebCore/platform/mac/PopupMenuMac.mm.
        * WebCoreSupport/SearchPopupMenuMac.h: Copied from WebCore/platform/mac/SearchPopupMenuMac.h.
        * WebCoreSupport/SearchPopupMenuMac.mm: Copied from WebCore/platform/mac/SearchPopupMenuMac.mm.
        * WebCoreSupport/WebChromeClient.mm:

2013-05-04  Anders Carlsson  <andersca@apple.com>

        Get rid of -[NSMutableDictionary _webkit_setObject:forUncopiedKey:]
        https://bugs.webkit.org/show_bug.cgi?id=115592

        Reviewed by Beth Dakin.

        Using CFDictionarySetValue to set a key without having to copy it is not supported. Use NSMapTable with strong pointers instead.

        * Misc/WebNSDictionaryExtras.h:
        * Misc/WebNSDictionaryExtras.m:
        * Panels/WebPanelAuthenticationHandler.h:
        (NSURLAuthenticationChallenge):
        * Panels/WebPanelAuthenticationHandler.m:
        (-[WebPanelAuthenticationHandler init]):
        (-[WebPanelAuthenticationHandler enqueueChallenge:forWindow:]):
        (-[WebPanelAuthenticationHandler tryNextChallengeForWindow:]):
        (-[WebPanelAuthenticationHandler startAuthentication:window:]):
        (-[WebPanelAuthenticationHandler cancelAuthentication:]):
        * Plugins/WebNetscapePluginView.h:
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView destroyPlugin]):
        (-[WebNetscapePluginView initWithFrame:pluginPackage:URL:baseURL:MIMEType:attributeKeys:attributeValues:loadManually:element:WebCore::]):
        (-[WebNetscapePluginView webFrame:didFinishLoadWithReason:]):
        (-[WebNetscapePluginView loadPluginRequest:]):

2011-05-01  Ryosuke Niwa  <rniwa@webkit.org>

        [Mac] WebKit doesn't enable or disable autocorrections when system preferences are changed
        https://bugs.webkit.org/show_bug.cgi?id=115463

        Reviewed by Darin Adler.

        Observe the default notification center for changes to autocorrection preferences.
        Note system preferences may also update WebAutomatic* defaults.

        * WebView/WebView.mm:
        (+[WebView initialize]):
        (+[WebView _shouldAutomaticTextReplacementBeEnabled]):
        (+[WebView _didChangeAutomaticTextReplacementEnabled:]):
        (+[WebView _shouldAutomaticSpellingCorrectionBeEnabled]):
        (+[WebView _didChangeAutomaticSpellingCorrectionEnabled:]):
        (+[WebView _shouldAutomaticQuoteSubstitutionBeEnabled]):
        (+[WebView _shouldAutomaticDashSubstitutionBeEnabled]):
        (+[WebView _didChangeAutomaticQuoteSubstitutionEnabled:]):
        (+[WebView _didChangeAutomaticDashSubstitutionEnabled:]):

2013-05-01  Benjamin Poulain  <bpoulain@apple.com>

        Fix the function names of r149453

        Unreviewed.

        I forgot to follow one of Darin's review comment. This patch
        fixes the function names to follow CF naming conventions.

        * WebView/WebHTMLRepresentation.mm:
        (newArrayWithStrings):
        (newArrayByConcatenatingArrays):
        (+[WebHTMLRepresentation supportedMIMETypes]):
        (+[WebHTMLRepresentation supportedNonImageMIMETypes]):
        (+[WebHTMLRepresentation supportedImageMIMETypes]):
        (+[WebHTMLRepresentation unsupportedTextMIMETypes]):

2013-05-01  Benjamin Poulain  <benjamin@webkit.org>

        Simplify WebHTMLRepresentation supportedMIMETypes methods
        https://bugs.webkit.org/show_bug.cgi?id=115314

        Reviewed by Darin Adler.

        The initialization was surprisingly complex because of DEFINE_STATIC_LOCAL.
        First, a new pointer was allocated on the heap with fast malloc (for RetainPtr<NSArray>).
        Then a new NSMutableArray was allocated but immediately put on the autorelease pool.
        Finally, that array was retained by the RetainPtr.

        This patch changes the code to only leak the NSMutableArray memory. There
        is no fastMalloc, nor any use of the autorelease pool.

        * WebView/WebHTMLRepresentation.mm:
        (createArrayWithStrings):
        (createArrayByConcatenatingArrays):
        (+[WebHTMLRepresentation supportedMIMETypes]):
        (+[WebHTMLRepresentation supportedNonImageMIMETypes]):
        (+[WebHTMLRepresentation supportedImageMIMETypes]):
        (+[WebHTMLRepresentation unsupportedTextMIMETypes]):

2013-04-30  Darin Adler  <darin@apple.com>

        [Mac] Remove adoptNS/retain pairs, since the two cancel each other out
        https://bugs.webkit.org/show_bug.cgi?id=115426

        Reviewed by Anders Carlsson.

        * Plugins/WebNetscapePluginStream.mm:
        (WebNetscapePluginStream::deliverDataToFile): Remove adoptNS and release.

2013-04-30  Geoffrey Garen  <ggaren@apple.com>

        Objective-C JavaScriptCore API should publicly support bridging to C
        https://bugs.webkit.org/show_bug.cgi?id=115447

        Reviewed by Mark Hahnenberg.

        * WebView/WebFrame.mm:
        (-[WebFrame _javaScriptContextForScriptWorld:]):
        * WebView/WebScriptWorld.mm:
        (+[WebScriptWorld scriptWorldForJavaScriptContext:]):

2013-04-30  Anders Carlsson  <andersca@apple.com>

        More StorageTracker cleanup
        https://bugs.webkit.org/show_bug.cgi?id=115429

        Reviewed by Andreas Kling.

        Call PageGroup::syncLocalStorage directly.

        * Storage/WebStorageManager.mm:
        (-[WebStorageManager syncLocalStorage]):

2013-04-30  Zalan Bujtas  <zalan@apple.com>

        Animations fail to start on http://www.google.com/insidesearch/howsearchworks/thestory/
        https://bugs.webkit.org/show_bug.cgi?id=111244

        Reviewed by David Kilzer.
        
        Enable performance.now() as a minimal subset of Web Timing API. 
        It returns DOMHighResTimeStamp, a monotonically increasing value representing the 
        number of milliseconds from the start of the navigation of the current document.
        JS libraries use this API to check against the requestAnimationFrame() timestamp.

        * Configurations/FeatureDefines.xcconfig:

2013-04-29  Chris Fleizach  <cfleizach@apple.com>

        WEB SPEECH: need to identify the default voice per language
        https://bugs.webkit.org/show_bug.cgi?id=115366

        Reviewed by Tim Horton.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-04-28  Dean Jackson  <dino@apple.com>

        [Mac] Disable canvas backing store scaling (HIGH_DPI_CANVAS)
        https://bugs.webkit.org/show_bug.cgi?id=115310

        Reviewed by Simon Fraser.

        Remove ENABLE_HIGH_DPI_CANVAS_macosx.

        * Configurations/FeatureDefines.xcconfig:

2013-04-27  Darin Adler  <darin@apple.com>

        Move from constructor and member function adoptCF/NS to free function adoptCF/NS.
        https://bugs.webkit.org/show_bug.cgi?id=115307

        Reviewed by Geoffrey Garen.

        This change was done by a global replace followed by compiling and inspecting for
        cases that needed to be tweaked by hand.

        * DefaultDelegates/WebDefaultContextMenuDelegate.mm:
        (-[WebDefaultUIDelegate menuItemWithTag:target:representedObject:]):
        * Misc/WebNSFileManagerExtras.mm:
        (-[NSFileManager _webkit_startupVolumeName]):
        * Plugins/Hosted/HostedNetscapePluginStream.mm:
        (WebKit::HostedNetscapePluginStream::HostedNetscapePluginStream):
        * Plugins/Hosted/NetscapePluginHostManager.mm:
        (WebKit::NetscapePluginHostManager::spawnPluginHost):
        (WebKit::NetscapePluginHostManager::instantiatePlugin):
        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        (WebKit::NetscapePluginHostProxy::NetscapePluginHostProxy):
        (WebKit::NetscapePluginHostProxy::beginModal):
        (WKPCBooleanAndDataReply):
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::print):
        (WebKit::NetscapePluginInstanceProxy::snapshot):
        (WebKit::NetscapePluginInstanceProxy::status):
        (WebKit::NetscapePluginInstanceProxy::loadURL):
        (WebKit::NetscapePluginInstanceProxy::evaluateJavaScript):
        (WebKit::NetscapePluginInstanceProxy::enumerate):
        (WebKit::NetscapePluginInstanceProxy::marshalValue):
        (WebKit::NetscapePluginInstanceProxy::marshalValues):
        (WebKit::NetscapePluginInstanceProxy::demarshalValue):
        (WebKit::NetscapePluginInstanceProxy::demarshalValues):
        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView setAttributeKeys:andValues:]):
        (-[WebHostedNetscapePluginView createPlugin]):
        * Plugins/WebBaseNetscapePluginView.mm:
        (-[WebBaseNetscapePluginView initWithFrame:pluginPackage:URL:baseURL:MIMEType:attributeKeys:attributeValues:loadManually:element:WebCore::]):
        (-[WebBaseNetscapePluginView cacheSnapshot]):
        (WebKit::getAuthenticationInfo):
        * Plugins/WebBasePluginPackage.mm:
        (-[WebBasePluginPackage initWithPath:]):
        * Plugins/WebNetscapePluginEventHandlerCarbon.mm:
        (WebNetscapePluginEventHandlerCarbon::startTimers):
        * Plugins/WebNetscapePluginEventHandlerCocoa.mm:
        (WebNetscapePluginEventHandlerCocoa::syntheticKeyDownWithCommandModifier):
        (WebNetscapePluginEventHandlerCocoa::handleTSMEvent):
        * Plugins/WebNetscapePluginPackage.mm:
        (-[WebNetscapePluginPackage _initWithPath:]):
        * Plugins/WebNetscapePluginStream.mm:
        (WebNetscapePluginStream::WebNetscapePluginStream):
        (WebNetscapePluginStream::deliverData):
        (WebNetscapePluginStream::deliverDataToFile):
        (WebNetscapePluginStream::didReceiveData):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView createPlugin]):
        (-[WebNetscapePluginView initWithFrame:pluginPackage:URL:baseURL:MIMEType:attributeKeys:attributeValues:loadManually:element:WebCore::]):
        (-[WebNetscapePluginView evaluateJavaScriptPluginRequest:]):
        * Storage/WebDatabaseManagerClient.mm:
        (WebDatabaseManagerClient::dispatchDidModifyOrigin):
        (WebDatabaseManagerClient::dispatchDidModifyDatabase):
        * Storage/WebStorageTrackerClient.mm:
        (WebStorageTrackerClient::dispatchDidModifyOrigin):
        * WebCoreSupport/CorrectionPanel.mm:
        (CorrectionPanel::handleAcceptedReplacement):
        * WebCoreSupport/WebApplicationCache.mm:
        (+[WebApplicationCache originsWithCache]):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::didRunInsecureContent):
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorClient::WebInspectorClient):
        (WebInspectorClient::openInspectorFrontend):
        * WebView/WebFullScreenController.mm:
        (-[WebFullScreenController enterFullScreen:]):
        * WebView/WebPDFDocumentExtras.mm:
        (allScriptsInPDFDocument):
        * WebView/WebPreferences.mm:
        (-[WebPreferences initWithIdentifier:]):
        (-[WebPreferences initWithCoder:]):
        * WebView/WebScriptDebugger.mm:
        (WebScriptDebugger::initGlobalCallFrame):
        (WebScriptDebugger::callEvent):
        * WebView/WebView.mm:
        (-[WebView previousValidKeyView]):
        Use adoptNS and adoptCF free functions.

2013-04-25  Roger Fong  <roger_fong@apple.com>

        Disable sub-pixel layout on mac.
        https://bugs.webkit.org/show_bug.cgi?id=114999.

        Reviewed by Simon Fraser.

        * Configurations/FeatureDefines.xcconfig:

2013-04-26  Simon Fraser  <simon.fraser@apple.com>

        Layer-backed WebViews don't repaint content outside the visible area
        https://bugs.webkit.org/show_bug.cgi?id=115275

        Reviewed by Beth Dakin.

        When a client of WebView makes the WebView be layer-backed, then
        AppKit propagaes the layer-backing down to the WebHTMLView (but
        no further).
        
        In this situation, we had a bug where content that was not
        in the visible content rect would not get repainted, because
        WebCore clips repaints to the visible rect.
        
        Fix by calling ScrollView::setPaintsEntireContents(bool) from
        -[WebHTMLView setLayer:], saying that we need
        to paint the entire contents if we have a layer.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView setLayer:]):

2013-04-25  Chris Fleizach  <cfleizach@apple.com>

        WEB SPEECH: language support does not work as expected
        https://bugs.webkit.org/show_bug.cgi?id=115119

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-04-25  Simon Fraser  <simon.fraser@apple.com>

        Build fix for smart compliers.

        Reviewed by Tim Horton.
        
        [NSDictionary dictionaryWithObjectsAndKeys:] returns an NSDictionary,
        not a NSMutableDictionary.

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::updateSpellingUIWithGrammarString):

2013-04-25  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: ConsoleMessage should include line and column number where possible
        https://bugs.webkit.org/show_bug.cgi?id=114929

        Reviewed by Timothy Hatcher.

        * WebCoreSupport/WebChromeClient.h:
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::addMessageToConsole):

2013-04-24  Jessie Berlin  <jberlin@apple.com>

        Assertion failure (crash in release) attempting to delete database storage in WK1 without
        creating a WebView first
        https://bugs.webkit.org/show_bug.cgi?id=115065

        Reviewed by Brady Eidson.

        Make sure the WebPlatformStrategies is initialized before using the WebDatabaseManager.

        * Storage/WebDatabaseManager.mm:
        (-[WebDatabaseManager init]):
        Move the logic from WebKitInitializeDatabasesIfNecessary here, and add a call to
        WebPlatformStrategies::initializeIfNecessary.

        * Storage/WebDatabaseManagerInternal.h: Removed.

        * WebCoreSupport/WebPlatformStrategies.h:
        (WebPlatformStrategies):
        Change "initialize" to "initalizeIfNecessary".
        * WebCoreSupport/WebPlatformStrategies.mm:
        (WebPlatformStrategies::initializeIfNecessary):
        Only call setPlatformStrategies once.

        * WebView/WebView.mm:
        (-[WebView _commonInitializationWithFrameName:groupName:]):
        Updated for the name change from initialize to initializeIfNecessary.
        Instead of calling WebKitInitializeDatabasesIfNecessary, call [WebDatabaseManager
        sharedWebDatabaseManager].
        (+[WebView _setLoadResourcesSerially:]):
        Updated for the name change from initialize to initializeIfNecessary.

2013-04-23  Antoine Quint  <graouts@apple.com>

        Initial advance of text runs should be taken into account
        https://bugs.webkit.org/show_bug.cgi?id=114949

        Reviewed by Darin Adler.

        Adding support for new method CTRunGetInitialAdvance in WebKitSystemInterface.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-04-22  Benjamin Poulain  <benjamin@webkit.org>

        Remove the memory instrumentation code
        https://bugs.webkit.org/show_bug.cgi?id=114931

        Reviewed by Andreas Kling.

        * WebView/WebRenderLayer.mm:

2013-04-18  Andy Estes  <aestes@apple.com>

        REGRESSION (r116645): Versions app's UI is munged in HiDPI due to background-size being reset to 'auto' when background short-hand is also specified
        https://bugs.webkit.org/show_bug.cgi?id=114833

        Reviewed by David Kilzer.

        The Versions app specifies both a background-size and a background
        shorthand CSS property, and its UI is broken after r116645 which resets
        background-size to 'auto' if the background shorthand property is
        specified.

        This patch enables the useLegacyBackgroundSizeShorthandBehavior setting
        added in r147034 to restore the expected behavior if the embedder is
        Versions.app and it was linked against a version of WebKit that had the
        legacy behavior.

        * Misc/WebKitVersionChecks.h:
        * WebView/WebView.mm:
        (shouldUseLegacyBackgroundSizeShorthandBehavior):
        (-[WebView _commonInitializationWithFrameName:groupName:]):

2013-04-18  Sam Weinig  <sam@webkit.org>

        Network Process crashing trying to read in IDNScriptWhiteList.txt
        https://bugs.webkit.org/show_bug.cgi?id=114827

        Reviewed by Anders Carlsson.

        Move IDNScriptWhiteList.txt from WebKit to WebCore, so that the NetworkProcess does not have to link against
        WebKit. It was a layering violation for WebCore to be trying to access WebKit resources anyway.

        * Resources/IDNScriptWhiteList.txt: Removed.

2013-04-17  Geoffrey Garen  <ggaren@apple.com>

        Renamed JSGlobalData to VM
        https://bugs.webkit.org/show_bug.cgi?id=114777

        Reviewed by Phil Pizlo.

        * Misc/WebCoreStatistics.mm:
        (+[WebCoreStatistics javaScriptObjectsCount]):
        (+[WebCoreStatistics javaScriptGlobalObjectsCount]):
        (+[WebCoreStatistics javaScriptProtectedObjectsCount]):
        (+[WebCoreStatistics javaScriptProtectedGlobalObjectsCount]):
        (+[WebCoreStatistics javaScriptProtectedObjectTypeCounts]):
        (+[WebCoreStatistics javaScriptObjectTypeCounts]):
        (+[WebCoreStatistics shouldPrintExceptions]):
        (+[WebCoreStatistics setShouldPrintExceptions:]):
        (+[WebCoreStatistics memoryStatistics]):
        (+[WebCoreStatistics javaScriptReferencedObjectsCount]):
        * Plugins/Hosted/NetscapePluginHostProxy.mm:
        (identifierFromIdentifierRep):
        * Plugins/Hosted/NetscapePluginInstanceProxy.h:
        (LocalObjectMap):
        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::LocalObjectMap::idForObject):
        (WebKit::NetscapePluginInstanceProxy::getWindowNPObject):
        (WebKit::NetscapePluginInstanceProxy::getPluginElementNPObject):
        (WebKit::NetscapePluginInstanceProxy::evaluate):
        (WebKit::NetscapePluginInstanceProxy::addValueToArray):
        * Plugins/Hosted/ProxyInstance.mm:
        (WebKit::ProxyRuntimeMethod::create):
        (WebKit::ProxyRuntimeMethod::createStructure):
        (WebKit::ProxyRuntimeMethod::finishCreation):
        (WebKit::ProxyInstance::getPropertyNames):
        * Plugins/Hosted/ProxyRuntimeObject.h:
        (WebKit::ProxyRuntimeObject::create):
        (WebKit::ProxyRuntimeObject::createStructure):
        * Plugins/WebNetscapePluginStream.mm:
        (WebNetscapePluginStream::wantsAllStreams):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView sendEvent:isDrawRect:]):
        (-[WebNetscapePluginView privateBrowsingModeDidChange]):
        (-[WebNetscapePluginView setWindowIfNecessary]):
        (-[WebNetscapePluginView createPluginScriptableObject]):
        (-[WebNetscapePluginView getFormValue:]):
        (-[WebNetscapePluginView evaluateJavaScriptPluginRequest:]):
        (-[WebNetscapePluginView webFrame:didFinishLoadWithReason:]):
        (-[WebNetscapePluginView loadPluginRequest:]):
        (-[WebNetscapePluginView _printedPluginBitmap]):
        * Plugins/WebPluginController.mm:
        (+[WebPluginController plugInViewWithArguments:fromPluginPackage:]):
        (-[WebPluginController stopOnePlugin:]):
        (-[WebPluginController destroyOnePlugin:]):
        (-[WebPluginController startAllPlugins]):
        (-[WebPluginController addPlugin:]):
        * WebKit.order:
        * WebView/WebScriptDebugDelegate.mm:
        (-[WebScriptCallFrame scopeChain]):
        (-[WebScriptCallFrame evaluateWebScript:]):
        * WebView/WebScriptDebugger.mm:
        (WebScriptDebugger::WebScriptDebugger):

2013-04-16  Beth Dakin  <bdakin@apple.com>

        Re-name Page::layoutMilestones() to Page::requestedLayoutMilestones()
        https://bugs.webkit.org/show_bug.cgi?id=114713

        Reviewed by Simon Fraser.

        * WebView/WebView.mm:
        (-[WebView _layoutMilestones]):

2013-04-15  Sam Weinig  <sam@webkit.org>

        Remove more #includes from Frame.h
        https://bugs.webkit.org/show_bug.cgi?id=114642

        Reviewed by Anders Carlsson.

        * WebView/WebFrame.mm:
        * WebView/WebHTMLRepresentation.mm:
        * WebView/WebView.mm:

2013-04-16  Alexey Proskuryakov  <ap@apple.com>

        Remove unused AlternativeTextClient::dismissDictationAlternativeUI
        https://bugs.webkit.org/show_bug.cgi?id=114598

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/WebAlternativeTextClient.h:
        * WebCoreSupport/WebAlternativeTextClient.mm:
        * WebView/WebView.mm:
        * WebView/WebViewInternal.h:

2013-04-15  Ryosuke Niwa  <rniwa@webkit.org>

        REGRESSION(r146025): WebKit applications can't apply underline or strike through
        https://bugs.webkit.org/show_bug.cgi?id=114662

        Reviewed by Enrica Casucci.

        Use -webkit- prefixes to apply underline. There should be no further compatibility issues
        since -khtml- was used only internally to pass the information down to WebCore.

        Unfortunately, we can't test this code like any other font panel bug.

        In the long run, we need to add some abstraction layer around font panel to make this testable
        or else we'll keep regressing this feature.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _styleFromFontAttributes:]):
        (-[WebHTMLView _styleForAttributeChange:]):

2013-04-15  Anders Carlsson  <andersca@apple.com>

        plugins/get-url-beforeunload-destroys-plugin.html crashes in WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=114653
        <rdar://problem/13659541>

        Reviewed by Sam Weinig.

        Protect the NetscapePluginInstanceProxy since it can otherwise go away.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::performRequest):

2013-04-14  Sam Weinig  <sam@webkit.org>

        Move Mac specific snapshotting code into its own file
        https://bugs.webkit.org/show_bug.cgi?id=114597

        Reviewed by Andreas Kling.

        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _selectionDraggingImage]):
        (-[WebHTMLView selectionImageForcingBlackText:]):

2013-04-14  Andreas Kling  <akling@apple.com>

        Move CSSOM classes to using MutableStylePropertySet over StylePropertySet.
        <http://webkit.org/b/114581>

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::shouldApplyStyle):
        * WebView/WebFrame.mm:
        (-[WebFrame _typingStyle]):

2013-04-10  Sam Weinig  <sam@webkit.org>

        Make Frame's ScriptController an OwnPtr and remove the #include
        https://bugs.webkit.org/show_bug.cgi?id=114105

        Reviewed by Dean Jackson.

        * Plugins/Hosted/HostedNetscapePluginStream.mm:
        * Plugins/WebNetscapePluginStream.mm:
        * Plugins/WebPluginContainerCheck.mm:
        * WebCoreSupport/WebGeolocationClient.mm:
        * WebCoreSupport/WebInspectorClient.mm:
        * WebView/WebFrame.mm:

2013-04-13  Anders Carlsson  <andersca@apple.com>

        Add form delegate method that's invoked right before sending a submit event to a form element
        https://bugs.webkit.org/show_bug.cgi?id=114575

        Reviewed by Dan Bernstein.

        * MigrateHeaders.make:
        Copy DOMHTMLFormElementInternal.h over to WebKit.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (makeFormFieldValuesDictionary):
        New helper function that returns the values of a form in dictionary form.

        (WebFrameLoaderClient::dispatchWillSendSubmitEvent):
        Call the right delegate method.

        (WebFrameLoaderClient::dispatchWillSubmitForm):
        Use the helper function.

        * WebView/WebDelegateImplementationCaching.h:
        * WebView/WebDelegateImplementationCaching.mm:
        (CallFormDelegate):
        Add another overload.

        * WebView/WebFormDelegate.h:
        * WebView/WebFormDelegate.m:
        (-[WebFormDelegate willSendSubmitEventToForm:inFrame:withValues:]):
        Add a default implementation.

2013-04-10  Benjamin Poulain  <bpoulain@apple.com>

        Mass remove all the empty directories

        Rubberstamped by Ryosuke Niwa.

        * ForwardingHeaders/wtf/unicode/icu: Removed.

2013-04-08  Anders Carlsson  <andersca@apple.com>

        Remove unneeded headers from FrameLoader.h
        https://bugs.webkit.org/show_bug.cgi?id=114223

        Reviewed by Geoffrey Garen.

        Include HistoryController.h from WebCore.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        * WebView/WebView.mm:

2013-04-09  Geoffrey Garen  <ggaren@apple.com>

        Removed bitrotted TimeoutChecker code
        https://bugs.webkit.org/show_bug.cgi?id=114336

        Reviewed by Alexey Proskuryakov.

        This mechanism hasn't worked for a while.

        MarkL is working on a new version of this feature with a distinct
        implementation.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::evaluate):

2013-04-08  Benjamin Poulain  <benjamin@webkit.org>

        Remove HTML Notification
        https://bugs.webkit.org/show_bug.cgi?id=114231

        Reviewed by Ryosuke Niwa.

        * Configurations/FeatureDefines.xcconfig:

2013-04-05  Anders Carlsson  <andersca@apple.com>

        Stop building Objective-C bindings for the SVG DOM
        https://bugs.webkit.org/show_bug.cgi?id=114076

        Reviewed by Geoffrey Garen.

        The DOM SVG Objective-C bindings have never been exposed as API, and not building them cuts WebCore build by 10%.

        * Configurations/FeatureDefines.xcconfig:
        * MigrateHeaders.make:

2013-04-05  Timothy Hatcher  <timothy@apple.com>

        Allow the Web Inspector to use WebSQL.

        This fixes an exception on load in the Safari Web Inspector.

        https://webkit.org/b/114040
        rdar://problem/13581422

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebInspectorClient.mm:
        (-[WebInspectorWindowController webView:frame:exceededDatabaseQuotaForSecurityOrigin:database:]): Added.

2013-04-02  Timothy Hatcher  <timothy@apple.com>

        Provide a user default that can be used to disable docking of the Web Inspector.

        The user default is "WebKit Web Inspector Setting - inspectorAttachDisabled".

        https://webkit.org/b/113779
        rdar://problem/13446021

        Reviewed by Joseph Pecoraro.

        * WebCoreSupport/WebInspectorClient.h:
        (WebInspectorClient::inspectorAttachDisabled): Added.
        (WebInspectorClient::setInspectorAttachDisabled): Added.

        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorClient::didResizeMainFrame):
        (-[WebInspectorWindowController window]):
        (-[WebInspectorWindowController showWindow:]):
        Check inspectorAttachDisabled() in places where we attach or update the dock button.

2013-04-02  Alexey Proskuryakov  <ap@apple.com>

        [Mac] Remove WKCreateNSURLConnectionDelegateProxy
        https://bugs.webkit.org/show_bug.cgi?id=113810

        Reviewed by Anders Carlsson.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-04-02  Alexey Proskuryakov  <ap@apple.com>

        <rdar://problem/13551119> [WK2] Crashes in NetworkProcess when canceling loads
        https://bugs.webkit.org/show_bug.cgi?id=113803

        Reviewed by Darin Adler.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::convertMainResourceLoadToDownload):
        Just pass nil instead of proxy.

2013-04-01  Ryosuke Niwa  <rniwa@webkit.org>

        WebKit/mac shouldn't have code for Mac 10.5 and earlier
        https://bugs.webkit.org/show_bug.cgi?id=113746

        Reviewed by Darin Adler.

        Deleted the code for 10.5 and removed if-defs for 10.6.

        * Plugins/Hosted/WebHostedNetscapePluginView.mm:
        (-[WebHostedNetscapePluginView createPlugin]):
        * Plugins/WebBaseNetscapePluginView.mm:
        (-[WebBaseNetscapePluginView initWithFrame:pluginPackage:URL:baseURL:MIMEType:attributeKeys:attributeValues:loadManually:element:WebCore::]):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView createPlugin]):
        (-[WebNetscapePluginView getVariable:forURL:value:length:]):
        (-[WebNetscapePluginView _workaroundSilverlightFullscreenBug:]):
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::selectItemWritingDirectionIsNatural):
        (WebChromeClient::selectItemAlignmentFollowsMenuWritingDirection):
        * WebCoreSupport/WebEditorClient.mm:
        (core):
        (WebEditorClient::checkTextOfParagraph):
        (WebEditorClient::requestCheckingOfString):
        * WebView/WebDynamicScrollBarsView.mm:
        (-[WebDynamicScrollBarsView reflectScrolledClipView:]):
        * WebView/WebFullScreenController.mm:
        (-[WebFullScreenController _updateMenuAndDockForFullScreen]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView _documentFragmentFromPasteboard:inContext:allowPlainText:]):
        (-[WebHTMLView _frameOrBoundsChanged]):
        (+[WebHTMLView _insertablePasteboardTypes]):
        (-[WebHTMLView _documentFragmentFromPasteboard:forType:inContext:subresources:]):
        (-[WebHTMLView validateUserInterfaceItemWithoutDelegate:]):
        (writingDirectionKeyBindingsEnabled):
        (-[WebHTMLView _lookUpInDictionaryFromMenu:]):
        (-[WebHTMLView attachRootLayer:]):
        * WebView/WebHTMLViewInternal.h:
        * WebView/WebPDFDocumentExtras.mm:
        * WebView/WebPreferences.mm:
        (+[WebPreferences initialize]):
        * WebView/WebResourceInternal.h:
        * WebView/WebScriptDebugDelegate.h:
        * WebView/WebView.mm:
        (-[WebView _commonInitializationWithFrameName:groupName:]):
        (-[WebView _preferencesChanged:]):
        (+[WebView initialize]):
        (clientNeedsWebViewInitThreadWorkaround):
        (-[WebView validateUserInterfaceItemWithoutDelegate:]):
        (-[WebView setGrammarCheckingEnabled:]):
        (-[WebView isAutomaticQuoteSubstitutionEnabled]):
        (-[WebView isAutomaticLinkDetectionEnabled]):
        (-[WebView isAutomaticDashSubstitutionEnabled]):
        (-[WebView isAutomaticTextReplacementEnabled]):
        (-[WebView isAutomaticSpellingCorrectionEnabled]):
        (-[WebView _searchWithSpotlightFromMenu:]):
        (WebInstallMemoryPressureHandler):
        * WebView/WebViewPrivate.h:

2013-04-01  Tim Horton  <timothy_horton@apple.com>

        WebCache should do the normal initialization dance
        https://bugs.webkit.org/show_bug.cgi?id=113722
        <rdar://problem/13424530>

        Reviewed by Anders Carlsson.

        In case a WebKit1 client uses WebCache before creating a WebView (or any of the other
        initialization-ready classes), we should do the initialization work in WebCache as well.

        * Misc/WebCache.mm:
        (+[WebCache initialize]):

2013-03-26  Timothy Hatcher  <timothy@apple.com>

        Add support for dock-to-right of the Web Inspector in the Mac port.

        Unfortunately this requires Safari changes, so it is disabled in the nightly builds.

        https://webkit.org/b/113341
        rdar://problem/10368152

        Reviewed by Joseph Pecoraro.

        * Resources/Dock.pdf: Updated.
        * WebCoreSupport/WebInspectorClient.h:
        (WebInspectorFrontendClient):
        * WebCoreSupport/WebInspectorClient.mm:
        (WebInspectorFrontendClient::frontendLoaded):
        (WebInspectorFrontendClient::attachWindow):
        (WebInspectorFrontendClient::setAttachedWindowWidth):
        (-[WebInspectorWindowController attachWindow:]):
        (-[WebInspectorWindowController attach]):
        (-[WebInspectorWindowController detach]):
        * WebInspector/WebInspectorFrontend.mm:
        (-[WebInspectorFrontend attach]):

2013-03-26  Tim Horton  <timothy_horton@apple.com>

        Unreviewed attempted cr-mac build fix.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-03-26  Hayato Ito  <hayato@chromium.org>

        Allow ShadowContents in HitTests by default.
        https://bugs.webkit.org/show_bug.cgi?id=113171

        Reviewed by Dimitri Glazkov.

        * WebView/WebFrame.mm:
        (-[WebFrame elementAtPoint:]):
        * WebView/WebHTMLView.mm:
        (-[WebHTMLView elementAtPoint:allowShadowContent:]):

2013-03-26  Tim Horton  <timothy_horton@apple.com>

        [ca] Tell CA to clean up unused resources if a given WebProcess won't be drawing
        https://bugs.webkit.org/show_bug.cgi?id=107539
        <rdar://problem/13032692>

        Reviewed by Simon Fraser.

        Update WebSystemInterface.

        * WebCoreSupport/WebSystemInterface.mm:
        (InitWebCoreSystemInterface):

2013-03-26  Sergio Villar Senin  <svillar@igalia.com>

        Implement overtype mode for editable content
        https://bugs.webkit.org/show_bug.cgi?id=112126

        Reviewed by Ryosuke Niwa.

        Added the OverWrite editing command to the WebCore editing
        commands lists.

        * WebView/WebHTMLView.mm:
        * WebView/WebView.h:
        * WebView/WebView.mm:

2013-03-25  Kent Tamura  <tkent@chromium.org>

        Rename ENABLE_INPUT_TYPE_DATETIME
        https://bugs.webkit.org/show_bug.cgi?id=113254

        Reviewed by Kentaro Hara.

        Rename ENABLE_INPUT_TYPE_DATETIME to ENABLE_INPUT_TYPE_DATETIME_INCOMPLETE.
        Actually I'd like to remove the code, but we shouldn't remove it yet
        because we shipped products with it on some platforms.

        * Configurations/FeatureDefines.xcconfig:

2013-03-21  Kiran Muppala  <cmuppala@apple.com>

        Add runtime setting for hidden page DOM timer throttling and CSS animation suspension
        https://bugs.webkit.org/show_bug.cgi?id=112308

        Reviewed by Gavin Barraclough.

        Add private preference for enabling/disabling hidden page DOM timer
        throttling and CSS animation suspension.  The preference should be
        disabled by default to avoid compatibility issues.

        * WebView/WebPreferenceKeysPrivate.h:
        * WebView/WebPreferences.mm:
        (+[WebPreferences initialize]):
        (-[WebPreferences hiddenPageDOMTimerThrottlingEnabled]):
        (-[WebPreferences setHiddenPageDOMTimerThrottlingEnabled:]):
        (-[WebPreferences hiddenPageCSSAnimationSuspensionEnabled]):
        (-[WebPreferences setHiddenPageCSSAnimationSuspensionEnabled:]):
        * WebView/WebPreferencesPrivate.h:
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-03-19  Ryosuke Niwa  <rniwa@webkit.org>

        Another Mac build fix attempt after r146239.

        * WebCoreSupport/WebFrameNetworkingContext.h:
        (WebFrameNetworkingContext):

2013-03-19  Ryosuke Niwa  <rniwa@webkit.org>

        Mac build fix attempt after r146239.

        * WebCoreSupport/WebFrameNetworkingContext.h:

2013-03-19  Sergey Ryazanov  <serya@chromium.org>

        Web Inspector: split Console into two entities, a web-facing bound object and page console.
        https://bugs.webkit.org/show_bug.cgi?id=111578

        Reviewed by Vsevolod Vlasov.

        Otherwise, a lot of logging in WebCore needs to go through the DOMWindow which is unnecessary.

        * Misc/WebCoreStatistics.mm:
        (+[WebCoreStatistics shouldPrintExceptions]):
        (+[WebCoreStatistics setShouldPrintExceptions:]):

2013-03-17  Adam Barth  <abarth@webkit.org>

        Legacy CSS vendor prefixes should only work for Dashboard
        https://bugs.webkit.org/show_bug.cgi?id=111890

        Reviewed by Eric Seidel.

        Enable legacy CSS vendor prefixes when we've been asked to turn on
        Dashboard compatibility mode.

        * WebView/WebView.mm:
        (-[WebView _setDashboardBehavior:to:]):

2013-03-16  Pratik Solanki  <psolanki@apple.com>

        Disable High DPI Canvas on iOS
        https://bugs.webkit.org/show_bug.cgi?id=112511

        Reviewed by Joseph Pecoraro.

        * Configurations/FeatureDefines.xcconfig:

2013-03-15  Timothy Hatcher  <timothy@apple.com>

        Disable suppressesIncrementalRendering for the Web Inspector.

        This ends up causing the Inspector to show blank for a couple seconds before
        it does its first paint. During that time the bare window chrome is showing
        when the Inspector's background and other simple elements count be painting.
        This causes the Inspector to look like it is loading slower than reality.

        https://bugs.webkit.org/show_bug.cgi?id=112300
        rdar://problem/13412219
 
        Reviewed by Geoff Garen.

        * WebCoreSupport/WebInspectorClient.mm:
        (-[WebInspectorWindowController init]): Disable suppressesIncrementalRendering.

2013-03-15  Nate Chapin  <japhet@chromium.org>

        Hide MainResourceLoader from the outside world
        https://bugs.webkit.org/show_bug.cgi?id=109971

        Reviewed by Adam Barth.

        * WebCoreSupport/WebFrameLoaderClient.h:
        (WebFrameLoaderClient):
        * WebCoreSupport/WebFrameLoaderClient.mm:
        (WebFrameLoaderClient::convertMainResourceLoadToDownload):

2013-03-15  Abhishek Arya  <inferno@chromium.org>

        Replace static_casts with to* helper functions.
        https://bugs.webkit.org/show_bug.cgi?id=112401

        Reviewed by Stephen Chenney.

        to* helper functions are preferred over static_cast calls since they
        help to catch bad casts easily on the testing infrastructure.

        * WebView/WebRenderNode.mm:
        (copyRenderNode):
        * WebView/WebView.mm:
        (-[WebView _addScrollerDashboardRegionsForFrameView:dashboardRegions:]):

2013-03-14  Manuel Rego Casasnovas  <rego@igalia.com>

        Add selectTrailingWhitespaceEnabled setting to WebCore::Page
        https://bugs.webkit.org/show_bug.cgi?id=109404

        Reviewed by Tony Chang.

        Use new settings for smartInsertDeleteEnabled and
        selectTrailingWhitespaceEnabled.

        * WebCoreSupport/WebEditorClient.mm:
        (WebEditorClient::smartInsertDeleteEnabled):
        (WebEditorClient::isSelectTrailingWhitespaceEnabled):
        * WebView/WebView.mm:
        (-[WebView _commonInitializationWithFrameName:groupName:]): Initialize
        settings from NSUserDefaults.
        (-[WebView setSelectTrailingWhitespaceEnabled:]):
        (-[WebView isSelectTrailingWhitespaceEnabled]):
        (-[WebView setSmartInsertDeleteEnabled:]):
        (-[WebView smartInsertDeleteEnabled]):
        * WebView/WebViewData.h:
        * WebView/WebViewData.mm:
        (-[WebViewPrivate init]):

2013-03-14  Abhishek Arya  <inferno@chromium.org>

        Replace static_casts with to* helper functions.
        https://bugs.webkit.org/show_bug.cgi?id=112296

        Reviewed by Kentaro Hara.

        to* helper functions are preferred over static_cast calls since they
        help to catch bad casts easily on the testing infrastructure.

        * WebCoreSupport/WebFrameLoaderClient.mm:
        (applyAppleDictionaryApplicationQuirkNonInlinePart):
        * WebView/WebHTMLRepresentation.mm:
        (searchForLabelsBeforeElement):

2013-03-14  Alice Liu  <alice.liu@apple.com>

        Add to HistoryItem a way to know if its underlying CachedPage has expired.
        https://bugs.webkit.org/show_bug.cgi?id=110652

        Reviewed by Brady Eidson.

        * History/WebHistoryItem.mm:
        (-[WebHistoryItem _isInPageCache]): Added. Just calls and returns core imple's function. 
        (-[WebHistoryItem _hasCachedPageExpired]): Same thing. 
        * History/WebHistoryItemPrivate.h:
        * WebView/WebPreferences.mm:
        (-[WebPreferences _backForwardCacheExpirationInterval]): Address fixme, now that WebCore::Settings
        has getters and setters with default value.
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]): call setBackForwardCacheExpirationInterval similar to other settings.

2013-03-13  Rik Cabanier  <cabanier@adobe.com>

        create runtime flags for CSS Compositing
        https://bugs.webkit.org/show_bug.cgi?id=111818

        Reviewed by Ryosuke Niwa.

        Added a preference to enable CSS compositing.

        * WebView/WebPreferenceKeysPrivate.h:
        * WebView/WebPreferences.mm:
        (+[WebPreferences initialize]):
        (-[WebPreferences cssCompositingEnabled]):
        (-[WebPreferences setCSSCompositingEnabled:]):
        * WebView/WebPreferencesPrivate.h:
        * WebView/WebView.mm:
        (-[WebView _preferencesChanged:]):

2013-03-13  Ryosuke Niwa  <rniwa@webkit.org>

        Threaded HTML Parser is missing feature define flags in all but Chromium port's build files
        https://bugs.webkit.org/show_bug.cgi?id=112277

        Reviewed by Adam Barth.

        * Configurations/FeatureDefines.xcconfig:

2013-03-13  Pavel Feldman  <pfeldman@chromium.org>

        Web Inspector: get rid of hiddenPanels filter
        https://bugs.webkit.org/show_bug.cgi?id=112252

        Reviewed by Vsevolod Vlasov.

        * WebCoreSupport/WebInspectorClient.h:
        (WebInspectorFrontendClient):
        * WebCoreSupport/WebInspectorClient.mm:
        * WebKit.order:

2013-03-12  Geoffrey Garen  <ggaren@apple.com>

        Moved RunLoopTimer and SchedulePair to WTF
        https://bugs.webkit.org/show_bug.cgi?id=112171

        Reviewed by Oliver Hunt.

        This will allow us to use timers in lower level primitives without
        duplicating all the code.

        * WebCoreSupport/WebFrameNetworkingContext.h:
        (WebFrameNetworkingContext):

2013-03-12  Abhishek Arya  <inferno@chromium.org>

        Replace static_casts with to* functions.
        https://bugs.webkit.org/show_bug.cgi?id=112072

        Reviewed by Philip Rogers.

        to* functions are preferred over static_cast calls since they
        help to catch bad casts easily on the testing infrastructure.

        * WebView/WebView.mm:
        (-[WebView _enterFullscreenForNode:WebCore::]):

2013-03-11  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r145462.
        http://trac.webkit.org/changeset/145462
        https://bugs.webkit.org/show_bug.cgi?id=112097

        Compilation failure in PluginView.cpp (Requested by jamesr_ on
        #webkit).

        * WebView/WebView.mm:
        (-[WebView _enterFullscreenForNode:WebCore::]):

2013-03-11  Abhishek Arya  <inferno@chromium.org>

        Replace static_casts with to* functions.
        https://bugs.webkit.org/show_bug.cgi?id=112072

        Reviewed by Philip Rogers.

        to* functions are preferred over static_cast calls since they
        help to catch bad casts easily on the testing infrastructure.

        * WebView/WebView.mm:
        (-[WebView _enterFullscreenForNode:WebCore::]):

2013-03-11  Jochen Eisinger  <jochen@chromium.org>

        Rename DefinitelyProcessingUserGesture to DefinitelyProcessingNewUserGesture
        https://bugs.webkit.org/show_bug.cgi?id=111959

        Reviewed by Alexey Proskuryakov.

        * Plugins/Hosted/NetscapePluginInstanceProxy.mm:
        (WebKit::NetscapePluginInstanceProxy::evaluate):
        * Plugins/WebNetscapePluginView.mm:
        (-[WebNetscapePluginView sendEvent:isDrawRect:]):

2013-03-11  Abhishek Arya  <inferno@chromium.org>

        Replace static_cast with to* helper functions.
        https://bugs.webkit.org/show_bug.cgi?id=112045

        Reviewed by Eric Seidel.

        * WebView/WebRenderLayer.mm:
        (+[WebRenderLayer nameForLayer:]):

2013-03-11  Jer Noble  <jer.noble@apple.com>

        Unreviewed build fix.  Remove stray brace which crept into r145409.

        * WebView/WebFullScreenController.mm:
        (-[WebFullScreenController performClose:]):

2013-01-30  Jer Noble  <jer.noble@apple.com>

        Mac: Cmd-w should close full screen window.
        https://bugs.webkit.org/show_bug.cgi?id=108406

        Reviewed by Darin Adler.

        Allow the user to close the full screen window with Cmd-w by making the full screen window
        closable, and by intercepting performClose:.

        * WebView/WebFullScreenController.mm:
        (-[WebFullScreenController init]): Create a closable full screen window.
        (-[WebFullScreenController performClose:]): When we receive a close request in full screen mode,
            animate out of full screen.

2013-03-07  Anders Carlsson  <andersca@apple.com>

        Add didFocusTextField:inFrame to WebFormDelegate
        https://bugs.webkit.org/show_bug.cgi?id=111804

        Reviewed by Dan Bernstein.

        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::focusedNodeChanged):
        * WebView/WebFormDelegate.h:
        * WebView/WebFormDelegate.m:
        (-[WebFormDelegate didFocusTextField:inFrame:]):

2013-03-04  Jer Noble  <jer.noble@apple.com>

        Default mouse cursor behavior should be auto-hide for full screen video with custom controls
        https://bugs.webkit.org/show_bug.cgi?id=107601

        Reviewed by Beth Dakin.

        Enable the CURSOR_VISIBILITY feature.

        * Configurations/FeatureDefines.xcconfig:

2013-03-05  Geoffrey Garen  <ggaren@apple.com>

        Removed some dead code in the page cache
        https://bugs.webkit.org/show_bug.cgi?id=111525

        Reviewed by Alexey Proskuryakov.

        Page cache autorelease doesn't exist anymore, so there's no need to keep
        around these olds hacks.

        This fixes <rdar://problem/4886761> Fix bizarre WebWindowWatcher policy in WebHistoryItem.

        * History/WebHistoryItem.mm:
        (+[WebHistoryItem _releaseAllPendingPageCaches]):
        * History/WebHistoryItemInternal.h:
        * Misc/WebCoreStatistics.mm:
        (+[WebCoreStatistics autoreleasedPageCount]):
        * WebView/WebView.mm:
        (-[WebView _commonInitializationWithFrameName:groupName:]):

2013-03-06  Dmitry Zvorygin  <zvorygin@chromium.org>

        Introduce new message sources for logging.
        https://bugs.webkit.org/show_bug.cgi?id=110968

        Reviewed by Pavel Feldman.

        * WebCoreSupport/WebChromeClient.mm:
        * WebView/WebUIDelegatePrivate.h:

2013-03-05  Kent Tamura  <tkent@chromium.org>

        Rename WebCore/editing/visible_units.* to VisibleUnits.*
        https://bugs.webkit.org/show_bug.cgi?id=111426

        Reviewed by Alexey Proskuryakov.

        * WebView/WebFrame.mm:

2013-03-05  James Robinson  <jamesr@chromium.org>

        ContainerNode::setActive should not sleep for 100ms on platforms that do not implement synchronous repaint(true) semantics
        https://bugs.webkit.org/show_bug.cgi?id=87054

        Reviewed by Darin Adler.

        The Mac WebKit1 port supports immediate invalidations.

        * WebCoreSupport/WebChromeClient.h:
        (WebChromeClient):
        * WebCoreSupport/WebChromeClient.mm:
        (WebChromeClient::supportsImmediateInvalidation):

2013-03-05  David Kilzer  <ddkilzer@apple.com>

        BUILD FIX (r144698): Only enable SPEECH_SYNTHESIS for Mac
        <http://webkit.org/b/106742>

        Fixes the following build failures:

            Undefined symbols for architecture i386:
              "__ZTVN7WebCore25PlatformSpeechSynthesizerE", referenced from:
                  __ZN7WebCore25PlatformSpeechSynthesizerC2EPNS_31PlatformSpeechSynthesizerClientE in PlatformSpeechSynthesizer.o
              NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
              "__ZN7WebCore25PlatformSpeechSynthesizer19initializeVoiceListEv", referenced from:
                  __ZN7WebCore25PlatformSpeechSynthesizerC2EPNS_31PlatformSpeechSynthesizerClientE in PlatformSpeechSynthesizer.o
            ld: symbol(s) not found for architecture i386

        * Configurations/FeatureDefines.xcconfig:
        - Only set ENABLE_SPEECH_SYNTHESIS for the macosx platform.

2013-03-04  David Kilzer  <ddkilzer@apple.com>

        BUILD FIX (r144662): Import JSBase.h in WebFrameLoadDelegate.h
        <http://webkit.org/b/111269>

        Fixes the following build failure:

            In file included from Source/WebKit/ios/DefaultDelegates/WebDefaultFrameLoadDelegate.m:11:
            In file included from Source/WebKit/mac/WebView/WebFrameLoadDelegatePrivate.h:29:
            Source/WebKit/mac/WebView/WebFrameLoadDelegate.h:41:5: error: 'JSC_OBJC_API_ENABLED' is not defined, evaluates to 0 [-Werror,-Wundef]
            #if JSC_OBJC_API_ENABLED
                ^
            Source/WebKit/mac/WebView/WebFrameLoadDelegate.h:207:5: error: 'JSC_OBJC_API_ENABLED' is not defined, evaluates to 0 [-Werror,-Wundef]
            #if JSC_OBJC_API_ENABLED
                ^
            2 errors generated.

        * WebView/WebFrameLoadDelegate.h: Include JSBase.h.

2013-03-04  Chris Fleizach  <cfleizach@apple.com>

        Support WebSpeech - Speech Synthesis
        https://bugs.webkit.org/show_bug.cgi?id=106742

        Reviewed by Simon Fraser.

        Enable speech synthesis for the Mac.

        * Configurations/FeatureDefines.xcconfig:

2013-03-04  Mark Hahnenberg  <mhahnenberg@apple.com>

        Remove contextInternalContext from JSContextInternal.h
        https://bugs.webkit.org/show_bug.cgi?id=111356

        Reviewed by Geoffrey Garen.

        We don't need it any more since we have globalContextRef in JSContext.

        * WebView/WebScriptWorld.mm:
        (+[WebScriptWorld scriptWorldForJavaScriptContext:]):

2013-03-04  Laszlo Gombos  <l.gombos@samsung.com>

        JSC_OBJC_API_ENABLED should be removed from FeatureDefines.h
        https://bugs.webkit.org/show_bug.cgi?id=111269

        Reviewed by Mark Hahnenberg.

        Include JavaScriptCore/JSBase.h for the definition of JSC_OBJC_API_ENABLED.

        * WebView/WebDelegateImplementationCaching.h:

2013-03-04  Kunihiko Sakamoto  <ksakamoto@chromium.org>

        Add build flag for FontLoader
        https://bugs.webkit.org/show_bug.cgi?id=111289

        Reviewed by Benjamin Poulain.

        Add ENABLE_FONT_LOAD_EVENTS build flag (disabled by default).

        * Configurations/FeatureDefines.xcconfig:

2013-03-03  Benjamin Poulain  <benjamin@webkit.org>

        [Mac] Get rid of a useless method from DOMHTMLInputElement
        https://bugs.webkit.org/show_bug.cgi?id=111279

        Reviewed by Sam Weinig.

        * DOM/WebDOMOperations.mm:
        * DOM/WebDOMOperationsPrivate.h:
        setValueForUser: is already privately exposed by DOMHTMLInputElement,
        no need to have it twice.

2013-03-03  Adam Barth  <abarth@webkit.org>

        Unreviewed attempted build fix. Adds back some includes removed in
        http://trac.webkit.org/changeset/144565.

        * DOM/WebDOMOperations.mm:
        * Misc/WebNSPasteboardExtras.mm:
        * WebCoreSupport/WebFrameNetworkingContext.mm:
        * WebView/WebRenderLayer.mm:
        * WebView/WebRenderNode.mm:

2013-03-03  Adam Barth  <abarth@webkit.org>

        Unreviewed rollout of http://trac.webkit.org/r144530
        As described in https://bugs.webkit.org/show_bug.cgi?id=111167 and
        https://bugs.webkit.org/show_bug.cgi?id=111035, this patch caused a
        large number of ASSERTs in chromium-win.

        * DOM/WebDOMOperations.mm:
        * Misc/WebNSPasteboardExtras.mm:
        * WebCoreSupport/WebFrameNetworkingContext.mm:
        * WebView/WebRenderLayer.mm:
        * WebView/WebRenderNode.mm:

2013-02-18  Darin Adler  <darin@apple.com>

        Cut down the number of source files that depend on Clipboard.h
        https://bugs.webkit.org/show_bug.cgi?id=110030

        Reviewed by Ryosuke Niwa.

        * WebView/WebPDFView.mm: Add include of Clipboard.h since we use it
        here and the world no longer includes it everywhere.

2013-03-02  Benjamin Poulain  <bpoulain@apple.com>

        Move computedStyleIncludingVisitedInfo from TestRunner to Internals
        https://bugs.webkit.org/show_bug.cgi?id=109772

        Reviewed by Andreas Kling.

        * WebView/WebView.mm:
        * WebView/WebViewPrivate.h:

2013-03-02  David Kilzer  <ddkilzer@apple.com>

        BUILD FIX (r143637): Predeclare JSContext as an Objective-C class
        <http://webkit.org/b/106059>

        Fixes the following build failure:

            In file included from Source/WebKit/ios/DefaultDelegates/WebDefaultFrameLoadDelegate.m:11:
            In file included from Source/WebKit/mac/WebView/WebFrameLoadDelegatePrivate.h:29:
            Source/WebKit/mac/WebView/WebFrameLoadDelegate.h:215:64: error: expected a type
            - (void)webView:(WebView *)webView didCreateJavaScriptContext:(JSContext *)context forFrame:(WebFrame *)frame;
                                                                           ^
            1 error generated.

        * WebView/WebFrameLoadDelegate.h: Add @class JSContext
        declaration.

2013-02-28  Alexey Proskuryakov  <ap@apple.com>

        Reduce amount of rebuilding when touching networking headers
        https://bugs.webkit.org/show_bug.cgi?id=111035

        Reviewed by Eric Seidel.

        Adding includes that are now necessary because WebCore headers don't have them
        any more.

        * DOM/WebDOMOperations.mm:
        * Misc/WebNSPasteboardExtras.mm:
        * WebCoreSupport/WebFrameNetworkingContext.mm:
        * WebView/WebRenderLayer.mm:
        * WebView/WebRenderNode.mm:

